{"version":3,"sources":["components/TaskForm/TaskForm.module.scss","components/TimeLine/TimeLine.module.scss","components/SettingsControls/SettingsControl/SettingsControl.module.scss","components/SettingsCategories/CategoryList/CategoriesList.module.scss","components/Tabs/Tabs.module.scss","containers/Header/Header.module.scss","components/TaskListMessages/TaskListMessages.module.scss","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.scss","components/PageHeading/PageHeading.module.scss","components/UI/Button/Button.module.scss","components/UI/Modal/Modal.module.scss","containers/TaskList/TaskList.module.scss","components/SettingsControls/SettingsControls.module.scss","components/Logo/Logo.module.scss","components/AddTask/AddTaskBtn.module.scss","assets/images/tomato_settings.svg","assets/images/tomato-first.svg","assets/images/tomato-add.svg","components/UI/Spinner/Spinner.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/SubTItle/SubTitle.module.scss","containers/Settings/Settings.module.scss","assets/images/Logo.svg","components/Navigation/NavigationItems/NavigationItems.module.scss","hoc/Layout/Layout.module.scss","components/AddTask/AddTaskBtn.jsx","components/PageHeading/PageHeading.jsx","components/UI/Button/Button.jsx","constants/Texts.js","components/TaskListMessages/TaskListMessages.jsx","helpers/checkTaskState.js","components/UI/Spinner/Spinner.jsx","components/Tasks/Tasks.jsx","axios.js","store/actions/taskList.js","store/actions/actionTypes.js","components/UI/Backdrop/Backdrop.jsx","components/UI/Modal/Modal.jsx","components/TaskForm/TaskFormField.jsx","components/TaskForm/TaskForm.jsx","containers/TaskList/TaskList.jsx","components/Tabs/Tabs.jsx","components/SubTItle/SubTitle.jsx","components/SettingsControls/SettingsControl/SettingsControl.jsx","store/actions/settings.js","components/TimeLine/TimeLineSegment.jsx","components/TimeLine/TimeLineMark.jsx","helpers/convertNumToTime.js","components/TimeLine/TimeLine.jsx","helpers/getTimeLineData.js","constants/Routes.js","components/SettingsControls/SettingsControls.jsx","components/SettingsPomodoros/SettingsPomodoros.jsx","components/SettingsCategories/CategoryList/CategoryItem.jsx","components/SettingsCategories/CategoryList/CategoriesList.jsx","components/SettingsCategories/Categories.jsx","router/SettingsRouter.jsx","auth.js","containers/NotFound/NotFound.jsx","hoc/ResolveRoutes/ResolveRoute.jsx","containers/Settings/Settings.jsx","containers/Statistic/Statistic.jsx","router/ProtectedRoute.jsx","containers/Login/Login.jsx","router/Router.jsx","components/Logo/Logo.jsx","components/Navigation/NavigationItems/NavigationItem/NavigationItem.jsx","components/Navigation/NavigationItems/NavigationItems.jsx","containers/Header/Header.jsx","hoc/Layout/Layout.jsx","serviceWorker.js","store/reducers/settings.js","constants/TaskFormOpts.js","store/reducers/taskList.js","helpers/checkFirstVisit.js","index.js","App.js"],"names":["module","exports","showModal","onClick","className","classes","Button","title","HeadingContainer","Title","children","color","clickHandler","classNames","join","messages","skip","redirect","str","isFirstVisit","properties","icon","listSettings","text","tomatoFirst","addTask","checkTaskState","IconWrapper","src","alt","Text","ButtonWrapper","Loader","instance","axios","create","baseURL","onInitTaskList","dispatch","get","then","res","type","payload","tasks","data","isFirstTask","Object","keys","length","connect","onCLoseTaskListModal","Backdrop","Container","Modal","generateField","radio","labelName","checked","value","placeholder","onChangeTaskListModal","identifier","radioClasses","Label","CheckedTomato","input","RadioInput","onChange","evt","push","Selected","key","RadioTitle","TaskFormField","React","memo","props","isEstimation","content","controlsList","additionalClass","EstimationBlock","radionWrapper","EstimationRadioWrapper","RadioWrapper","Category","map","id","prop","action","TaskForm","taskList","onStartSaveTask","taskFormOpts","modalContent","AddTaskTitle","field","ButtonsWrapper","preventDefault","Form","loading","Spinner","post","console","log","onSaveTask","onSkipGreeting","onOpenTaskListModal","withRouter","history","useEffect","Tasks","TaskListMessages","TaskList","AddTaskWrapper","PageHeading","AddTaskBtn","isModalOpen","elements","match","Tabs","elem","splitedPath","path","TabsItem","activeClassName","Active","TabsLink","to","subTitle","SubTitle","onIncrement","name","actions","onDecrement","minMax","settingsWord","min","max","categoryName","Iteration","ShortBreak","LongBreak","Work","SettingsControl","htmlFor","ControlsWrapper","disabled","Input","readOnly","ControlDescription","segment","size","currentClass","WorkIteration","style","width","leftShift","markOpts","ShiftedMark","TimeLineMark","left","num","hours","Math","floor","minutes","time","state","work","iteration","short","long","curry","fn","arr","workWithShortBreaks","totalTime","unit","cycleTime","currentTime","timeIntervals","Array","_","topMarks","convertNumToTIme","opts","getTimeLineData","workProccess","index","returnedValue","TimeLineSegment","uuid","timeLineGraph","getMappedList","timeMark","topMarksContainer","markLines","Cycle","TimeLineWrapper","TopMarksWrapper","TimeLine","BottomMarksWrapper","SETTINGS","STATISTIC","TASK_LIST","RESOLVED_ROUTES","settings","settingsArr","onInitSettings","catch","err","onSaveSettings","put","onResetSettings","SettingsControlForm","control","ListItem","categories","categoryList","category","CategoryItem","List","CategoriesList","exact","component","PomodorosSettings","CategoryList","from","this","authentificated","isAuth","auth","isAuthenticated","location","Component","find","item","pathname","NotFound","ResolveRoute","Wrapper","SettingsRouter","rest","render","login","ProtectedRoute","Settings","Statistic","Login","shown","Logo","LogoHidden","locationPath","split","NavigationItem","NavigationLink","Menu","useState","fixedHeader","fixedHeaderHandler","headerClasses","Header","Sticky","getScroll","isScroll","window","pageYOffset","addEventListener","HeaderWrapper","NavigationItems","Layout","Router","Boolean","hostname","initialState","settingControlsHandler","dir","settingsItem","setting","step","newArr","getFormattedDate","date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","Date","sessionStorage","getItem","setItem","checkFirstVisit","updateFormField","target","findIndex","newState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","taskForm","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39cc039d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"TaskForm_Form__2O1Az\",\"ButtonsWrapper\":\"TaskForm_ButtonsWrapper__3pc3j\",\"Button\":\"TaskForm_Button__1hLqx\",\"RadioTitle\":\"TaskForm_RadioTitle__1Evxq\",\"AddTaskTitle\":\"TaskForm_AddTaskTitle__3RaaF\",\"Label\":\"TaskForm_Label__200HP\",\"RadioWrapper\":\"TaskForm_RadioWrapper__2IKna\",\"RadioInput\":\"TaskForm_RadioInput__15CMi\",\"Work\":\"TaskForm_Work__2WK27\",\"Education\":\"TaskForm_Education__2Glsy\",\"Hobby\":\"TaskForm_Hobby__2Jpny\",\"Sport\":\"TaskForm_Sport__2gO2L\",\"Other\":\"TaskForm_Other__AtzWX\",\"Urgent\":\"TaskForm_Urgent__3deAr\",\"High\":\"TaskForm_High__21w2A\",\"Middle\":\"TaskForm_Middle__V5Oxv\",\"Low\":\"TaskForm_Low__10s4e\",\"EstimationBlock\":\"TaskForm_EstimationBlock__tV4lb\",\"EstimationRadioWrapper\":\"TaskForm_EstimationRadioWrapper__2xI3I\",\"CheckedTomato\":\"TaskForm_CheckedTomato__1HFy0\",\"Category\":\"TaskForm_Category__3TRmR\",\"Selected\":\"TaskForm_Selected__32LWy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cycle\":\"TimeLine_Cycle__183H5\",\"TimeLineWrapper\":\"TimeLine_TimeLineWrapper__3rwQG\",\"TimeLine\":\"TimeLine_TimeLine__1v-ae\",\"TimeLineMark\":\"TimeLine_TimeLineMark__3Lkme\",\"ShiftedMark\":\"TimeLine_ShiftedMark__3yCgQ\",\"MarkWrapper\":\"TimeLine_MarkWrapper__2Qt1d\",\"TopMarksWrapper\":\"TimeLine_TopMarksWrapper__2hyN9\",\"BottomMarksWrapper\":\"TimeLine_BottomMarksWrapper__2iEIp\",\"Start\":\"TimeLine_Start__38h1q\",\"End\":\"TimeLine_End__3XWKm\",\"WorkIteration\":\"TimeLine_WorkIteration__3-KWl\",\"ShortBreak\":\"TimeLine_ShortBreak__2a9qX\",\"LongBreak\":\"TimeLine_LongBreak__TzQag\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SettingsControl\":\"SettingsControl_SettingsControl__3xTEQ\",\"Label\":\"SettingsControl_Label__2ctyB\",\"Work\":\"SettingsControl_Work__189-8\",\"Iteration\":\"SettingsControl_Iteration__3W35h\",\"ShortBreak\":\"SettingsControl_ShortBreak__SWeil\",\"LongBreak\":\"SettingsControl_LongBreak__3VuL0\",\"ControlsWrapper\":\"SettingsControl_ControlsWrapper__1tX4Z\",\"ControlDescription\":\"SettingsControl_ControlDescription__3x5eZ\",\"Input\":\"SettingsControl_Input__1FNIQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"CategoriesList_List__1qgiK\",\"ButtonWrapper\":\"CategoriesList_ButtonWrapper__1OlI9\",\"ListItem\":\"CategoriesList_ListItem__2KRM-\",\"Work\":\"CategoriesList_Work__BwyrD\",\"Education\":\"CategoriesList_Education__3vFcm\",\"Hobby\":\"CategoriesList_Hobby__AHrpm\",\"Sport\":\"CategoriesList_Sport__1ACo5\",\"Other\":\"CategoriesList_Other__318kp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tabs\":\"Tabs_Tabs__16Mtf\",\"TabsItem\":\"Tabs_TabsItem__3tFY5\",\"TabsLink\":\"Tabs_TabsLink__1iXv4\",\"Active\":\"Tabs_Active__2yZyb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__HQIlZ\",\"Sticky\":\"Header_Sticky__1W9vY\",\"HeaderWrapper\":\"Header_HeaderWrapper__2SROQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IconWrapper\":\"TaskListMessages_IconWrapper__HnwQ_\",\"Text\":\"TaskListMessages_Text__1GDDX\",\"ButtonWrapper\":\"TaskListMessages_ButtonWrapper__2OUg6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1eVc8\",\"NavigationLink\":\"NavigationItem_NavigationLink__20mbT\",\"Active\":\"NavigationItem_Active__2wNbt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HeadingContainer\":\"PageHeading_HeadingContainer__1OAte\",\"Title\":\"PageHeading_Title__2nDtj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Ajf-\",\"Green\":\"Button_Green__3-UVv\",\"Blue\":\"Button_Blue__Mgv3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Modal_Container__1bc4A\",\"Modal\":\"Modal_Modal__31OI7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"TaskList_TaskList__3IHKv\",\"AddTaskWrapper\":\"TaskList_AddTaskWrapper__2XaY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SettingsControlForm\":\"SettingsControls_SettingsControlForm__3GwIp\",\"ButtonWrapper\":\"SettingsControls_ButtonWrapper__2w0wm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__d04QA\",\"LogoHidden\":\"Logo_LogoHidden__1JOev\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"AddTaskBtn_Button__H6Ial\"};","module.exports = __webpack_public_path__ + \"static/media/tomato_settings.07c3fe0a.svg\";","module.exports = __webpack_public_path__ + \"static/media/tomato-first.a871b035.svg\";","module.exports = __webpack_public_path__ + \"static/media/tomato-add.40ce5e7a.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1Vve3\",\"load2\":\"Spinner_load2__MgRZO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__Vem4f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SubTitle\":\"SubTitle_SubTitle__1p3FR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Settings_Wrapper__tdKXN\"};","module.exports = __webpack_public_path__ + \"static/media/Logo.73bf16d2.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"NavigationItems_Menu__3_JHW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__ACkHP\"};","import React from 'react';\n\nimport classes from './AddTaskBtn.module.scss';\n\nexport default ({ showModal }) => (\n  <button onClick={showModal} className={classes.Button}>\n    <span className=\"icon-add\" />\n  </button>\n);","import React from 'react';\nimport classes from './PageHeading.module.scss';\n\nexport default ({ title }) => (\n  <section className={classes.HeadingContainer}>\n    <h2 className={classes.Title}>{title}</h2>\n  </section>\n);\n","import React from 'react';\n\nimport classes from './Button.module.scss';\n\nexport default ({children, color, clickHandler}) => {\n  const classNames = [classes.Button, classes[color]];\n  return (\n    <button onClick={clickHandler} className={classNames.join(' ')}>\n      {children}\n    </button>\n  );\n}","export const messages = {\n  firstVisit: 'As you visited our site for a first time you can check and customize your default application settings',\n  firstTask: 'Add your first task',\n  noTasks: 'You don’t have any tasks left. Add new tasks to stay productive.',\n};\n","import React from 'react';\nimport classes from './TaskListMessages.module.scss';\nimport Button from '../UI/Button/Button';\nimport checkTaskState from '../../helpers/checkTaskState';\n\nexport default ({\n  skip,\n  redirect,\n  str,\n  isFirstVisit,\n}) => {\n  const properties = checkTaskState(str);\n  return (\n    <>\n      <div className={classes.IconWrapper}>\n        <img src={properties.icon} alt=\"Tomato\" />\n      </div>\n      <h2 className={classes.Text}>\n        {properties.text}\n      </h2>\n      {isFirstVisit\n        ? (\n          <div className={classes.ButtonWrapper}>\n            <Button clickHandler={skip} color=\"Blue\">Skip</Button>\n            <Button clickHandler={redirect} color=\"Green\">Go to Settings</Button>\n          </div>\n        )\n        : null}\n    </>\n  );\n};\n","import { messages } from '../constants/Texts';\nimport listSettings from '../assets/images/tomato_settings.svg';\nimport tomatoFirst from '../assets/images/tomato-first.svg';\nimport addTask from '../assets/images/tomato-add.svg';\n\nexport default (str) => {\n  const properties = { icon: listSettings, text: messages.firstVisit };\n  switch (str) {\n    case 'firstVisit':\n      return properties;\n\n    case 'firstTask':\n      properties.icon = tomatoFirst;\n      properties.text = messages.firstTask;\n      return properties;\n\n    default:\n      properties.icon = addTask;\n      properties.text = messages.noTasks;\n      return properties;\n  }\n};\n","import React from 'react';\n\nimport classes from './Spinner.module.scss';\n\nexport default () => (\n  <div className={classes.Loader}>Loading...</div>\n);\n","import React from 'react';\n\nexport default () => (\n  <div>\n    taskList\n  </div>\n);\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://productivity-react.firebaseio.com/',\n});\n\nexport default instance;\n","import * as actionTypes from './actionTypes';\nimport axios from '../../axios';\n\nexport const onGetTasks = (tasks) => ({\n  type: actionTypes.GET_TASKS,\n  payload: {\n    tasks,\n    isFirstTask: !Object.keys(tasks).length,\n  },\n});\n\nexport const onSkipGreeting = () => ({\n  type: actionTypes.SKIP_GREETING,\n});\n\nexport const onInitTaskList = () => (dispatch) => {\n  axios.get('tasks.json')\n    .then((res) => dispatch(onGetTasks(res.data || {})));\n};\n\nexport const onOpenTaskListModal = () => ({\n  type: actionTypes.OPEN_TASK_LIST_MODAL,\n});\n\nexport const onCLoseTaskListModal = () => ({\n  type: actionTypes.CLOSE_TASK_LIST_MODAL,\n});\n\nexport const onChangeTaskListModal = (evt, id, prop) => ({\n  type: actionTypes.ON_CHANGE_TASK_LIST_MODAL,\n  payload: { evt, id, prop },\n});\n\nexport const onSaveTask = (res) => ({\n  type: actionTypes.ON_SAVE_TASK,\n  payload: res,\n});\n\nexport const onStartSaveTask = (data) => (dispatch) => {\n  dispatch({ type: actionTypes.ON_SAVE_TASK_START });\n  axios.post('tasks.json', data)\n    .then((res) => {\n      console.log(res); //for tracking saved data\n      dispatch(onSaveTask(res));\n    });\n};\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const INCREMENT_SETTINGS = 'INCREMENT_SETTINGS';\nexport const DECREMENT_SETTINGS = 'DECREMENT_SETTINGS';\nexport const SAVE_SETTINGS_START = 'SAVE_SETTINGS_START';\nexport const SAVE_SETTINGS = 'SAVE_SETTINGS';\nexport const RESET_SETTINGS = 'RESET_SETTINGS';\nexport const GET_TASKS = 'GET_TASKS';\nexport const SKIP_GREETING = 'SKIP_GREETING';\nexport const OPEN_TASK_LIST_MODAL = 'OPEN_TASK_LIST_MODAL';\nexport const CLOSE_TASK_LIST_MODAL = 'CLOSE_TASK_LIST_MODAL';\nexport const ON_CHANGE_TASK_LIST_MODAL = 'ON_CHANGE_TASK_LIST_MODAL';\nexport const ON_SAVE_TASK_START = 'ON_SAVE_TASK_START';\nexport const ON_SAVE_TASK = 'ON_SAVE_TASK';\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classes from './Backdrop.module.scss';\nimport * as action from '../../../store/actions';\n\nconst Backdrop = ({ onCLoseTaskListModal }) => (\n    <div\n      className={classes.Backdrop}\n      onClick={onCLoseTaskListModal}\n    />\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n  onCLoseTaskListModal: () => dispatch(action.onCLoseTaskListModal()),\n});\n\nexport default connect(null, mapDispatchToProps)(Backdrop);\n","import React from 'react';\nimport Backdrop from '../Backdrop/Backdrop';\nimport classes from './Modal.module.scss';\n\nexport default ({ children }) => (\n  <div className={classes.Container}>\n    <Backdrop />\n    <div className={classes.Modal}>\n      {children}\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport classes from './TaskForm.module.scss';\nimport * as action from '../../store/actions';\n\nconst generateField = ({\n  type,\n  radio,\n  labelName,\n  checked,\n  value,\n  placeholder,\n  onChangeTaskListModal,\n}) => {\n  const identifier = (type === 'radio')\n    ? radio\n    : labelName;\n  const radioClasses = (labelName === 'Estimation' && radio === checked)\n    ? [classes.Label, classes.CheckedTomato]\n    : [classes.Label];\n  const input = type === 'radio'\n    ? (\n      <>\n        <input\n          className={classes.RadioInput}\n          onChange={(evt) => onChangeTaskListModal(evt, labelName, 'checked')}\n          type={type}\n          value={identifier}\n          checked={radio === checked}\n        />\n        <span className={classes[identifier]} />\n      </>\n    )\n    : (\n      <input\n        onChange={(evt) => onChangeTaskListModal(evt, labelName, 'value')}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n      />\n    );\n\n  if (radio === checked) {\n    radioClasses.push(classes.Selected);\n  }\n\n  return (\n    <label className={radioClasses.join(' ')} key={identifier}>\n      <h4 className={classes.RadioTitle}>{labelName !== 'Estimation' && identifier}</h4>\n      {input}\n    </label>\n  );\n};\n\nconst TaskFormField = React.memo((props) => {\n  const isEstimation = props.labelName === 'Estimation';\n  let content = generateField(props);\n\n  if (props.controlsList) {\n    const additionalClass = isEstimation\n      ? classes.EstimationBlock\n      : null;\n    const radionWrapper = isEstimation\n      ? classes.EstimationRadioWrapper\n      : classes.RadioWrapper;\n\n    content = (\n      <div className={[additionalClass, classes.Category].join(' ')}>\n        <h4 className={classes.RadioTitle}>{props.labelName}</h4>\n        <div className={radionWrapper}>\n          {props.controlsList.map((radio) => generateField({ ...props, radio }))}\n        </div>\n      </div>\n    );\n  }\n  return content;\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChangeTaskListModal: (evt, id, prop) => dispatch(action.onChangeTaskListModal(evt, id, prop)),\n});\n\nexport default connect(null, mapDispatchToProps)(TaskFormField);\n","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport TaskFormField from './TaskFormField';\nimport Spinner from '../UI/Spinner/Spinner';\nimport classes from './TaskForm.module.scss';\nimport * as action from '../../store/actions';\n\nconst TaskForm = React.memo(({\n  onCLoseTaskListModal,\n  taskList,\n  onStartSaveTask,\n}) => {\n  const { taskFormOpts } = taskList;\n\n  const cancelHandler = (evt) => {\n    evt.preventDefault();\n    onCLoseTaskListModal();\n  };\n  const saveHandler = (evt) => {\n    evt.preventDefault();\n    onStartSaveTask(taskFormOpts);\n  };\n\n  const modalContent = (\n    <>\n      <h3 className={classes.AddTaskTitle}>Add Task</h3>\n      {taskFormOpts.map((field) => (\n        <TaskFormField\n          key={field.labelName}\n          {...field}\n        />\n      ))}\n      <div className={classes.ButtonsWrapper}>\n        <button className={`${classes.Button} icon-close`} onClick={cancelHandler} />\n        <button className={`${classes.Button} icon-check`} onClick={saveHandler} />\n      </div>\n    </>\n  );\n\n  return (\n    <form className={classes.Form}>\n      {taskList.loading\n        ? <Spinner />\n        : modalContent}\n    </form>\n  );\n});\n\nconst mapStateToProps = ({ taskList }) => ({\n  taskList,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onCLoseTaskListModal: () => dispatch(action.onCLoseTaskListModal()),\n  onStartSaveTask: (data) => dispatch(action.onStartSaveTask(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm);\n","import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AddTaskBtn from '../../components/AddTask/AddTaskBtn';\nimport PageHeading from '../../components/PageHeading/PageHeading';\nimport TaskListMessages from '../../components/TaskListMessages/TaskListMessages';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Tasks from '../../components/Tasks/Tasks';\nimport Modal from '../../components/UI/Modal/Modal';\nimport TaskForm from '../../components/TaskForm/TaskForm';\nimport classes from './TaskList.module.scss';\nimport * as action from '../../store/actions/index';\n\nconst TaskList = ({\n  history,\n  taskList,\n  onInitTaskList,\n  onSkipGreeting,\n  onOpenTaskListModal,\n}) => {\n  useEffect(() => {\n    onInitTaskList();\n  }, [onInitTaskList]);\n\n  const redirectToSettings = () => {\n    onSkipGreeting();\n    history.push('/settings');\n  };\n  let content = <Spinner />;\n  if (Object.keys(taskList.tasks).length) {\n    content = <Tasks />;\n  }\n  if (taskList.isFirstTask || taskList.isFirstVisit) {\n    content = (\n      <TaskListMessages\n        skip={onSkipGreeting}\n        redirect={redirectToSettings}\n        str={taskList.isFirstVisit ? 'firstVisit' : 'firstTask'}\n        isFirstVisit={taskList.isFirstVisit}\n      />\n    );\n  }\n  return (\n    <div className={classes.TaskList}>\n      <div className={classes.AddTaskWrapper}>\n        <PageHeading title=\"Daily Task List\" />\n        <AddTaskBtn showModal={onOpenTaskListModal} />\n      </div>\n      {content}\n      {taskList.isModalOpen\n        && (\n          <Modal>\n            <TaskForm />\n          </Modal>\n        )}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ taskList }) => ({\n  taskList,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onInitTaskList: () => dispatch(action.onInitTaskList()),\n  onSkipGreeting: () => dispatch(action.onSkipGreeting()),\n  onOpenTaskListModal: () => dispatch(action.onOpenTaskListModal()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TaskList));\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport classes from './Tabs.module.scss';\n\nexport default withRouter(({ elements, match }) => (\n  <ul className={classes.Tabs}>\n    {elements.map((elem) => {\n      const splitedPath = `${match.path}/${elem}`;\n      return (\n        <li className={classes.TabsItem} key={elem}>\n          <NavLink\n            activeClassName={classes.Active}\n            className={classes.TabsLink}\n            to={splitedPath}\n          >\n            {elem}\n          </NavLink>\n        </li>\n      );\n    })}\n  </ul>\n));\n","import React from 'react';\nimport classes from './SubTitle.module.scss';\n\nexport default ({ subTitle }) => (\n  <h3 className={classes.SubTitle}>{subTitle}</h3>\n);\n","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport classes from './SettingsControl.module.scss';\nimport * as actions from '../../../store/actions';\n\nconst SettingsControl = ({\n  title,\n  name,\n  value,\n  minMax,\n  text,\n  onIncrement,\n  onDecrement\n}) => {\n  const settingsWord = name !== 'iteration' ? ' minutes' : ' iterations';\n  const { min, max } = minMax;\n  const categoryName = [classes.Label];\n  switch (name) {\n    case ('iteration'):\n      categoryName.push(classes.Iteration);\n      break;\n    case ('shortBreak'):\n      categoryName.push(classes.ShortBreak);\n      break;\n    case ('longBreak'):\n      categoryName.push(classes.LongBreak);\n      break;\n    default:\n      categoryName.push(classes.Work);\n  }\n  return (\n    <div className={classes.SettingsControl}>\n      <label className={categoryName.join(' ')} htmlFor={name}>\n        {title}\n      </label>\n      <div className={classes.ControlsWrapper}>\n        <button\n          className=\"icon-minus\"\n          disabled={value === min}\n          onClick={(evt) => {\n            evt.preventDefault();\n            onDecrement(name);\n          }}\n        />\n        <input className={classes.Input} type=\"text\" value={value} readOnly name={name} />\n        <button\n          className=\"icon-add\"\n          disabled={value === max}\n          onClick={(evt) => {\n            evt.preventDefault();\n            onIncrement(name);\n          }}\n        />\n      </div>\n      <p className={classes.ControlDescription}>\n        {text}\n        <span>{settingsWord}</span>\n      </p>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onIncrement: (name) => dispatch(actions.incrementSettings(name)),\n  onDecrement: (name) => dispatch(actions.decrementSettings(name)),\n});\n\nexport default connect(null, mapDispatchToProps)((SettingsControl));\n","import * as actionTypes from './actionTypes';\nimport axios from '../../axios';\n\nexport const setSettings = (settings) => ({\n  type: actionTypes.SET_SETTINGS,\n  settings,\n});\n\nexport const saveSettings = () => ({\n  type: actionTypes.SAVE_SETTINGS,\n});\n\nexport const initSettings = () => (dispatch) => {\n  axios.get('/settings.json')\n    .then((res) => dispatch(setSettings(res.data)))\n    .catch((err) => console.log(err));\n};\n\nexport const resetSettings = () => ({\n  type: actionTypes.RESET_SETTINGS,\n});\n\nexport const incrementSettings = (name) => ({\n  type: actionTypes.INCREMENT_SETTINGS,\n  name,\n});\n\nexport const updateSettings = (settings) => (dispatch) => {\n  dispatch({ type: actionTypes.SAVE_SETTINGS_START });\n  axios.put('/settings.json', settings)\n    .then(() => dispatch(saveSettings()))\n    .catch((err) => console.log(err));\n};\n\nexport const decrementSettings = (name) => ({\n  type: actionTypes.DECREMENT_SETTINGS,\n  name,\n});\n","import React from 'react';\n\nimport classes from './TimeLine.module.scss';\n\nexport default ({ segment, size }) => {\n  let currentClass = null;\n  switch (segment) {\n    case ('work'):\n      currentClass = classes.WorkIteration;\n      break;\n    case ('shortBreak'):\n      currentClass = classes.ShortBreak;\n      break;\n    default:\n      currentClass = classes.LongBreak;\n  }\n\n  return (\n    (\n      <div\n        className={currentClass}\n        style={{ width: `${size}%` }}\n      />\n    )\n  );\n};\n","import React from 'react';\n\nimport classes from './TimeLine.module.scss';\n\nexport default ({ text, leftShift, markOpts }) => {\n  const additionalClass = markOpts ? classes[markOpts] : classes.ShiftedMark;\n  const classNames = [classes.TimeLineMark, additionalClass];\n  return (\n    <p className={classNames.join(' ')} style={{ left: leftShift }}>\n      <span>{text}</span>\n    </p>\n  );\n};\n","export default (num) => {\n  const hours = Math.floor(num / 60);\n  const minutes = num % 60;\n  let time = `${hours}h ${minutes} m `;\n  if (hours === 0) {\n    time = `${minutes} m`;\n  }\n  if (minutes === 0) {\n    time = `${hours}h`;\n  }\n  return time;\n};\n","import React from 'react';\n\nimport uuid from 'uuid/v1';\nimport TimeLineSegment from './TimeLineSegment';\nimport TimeLineMark from './TimeLineMark';\nimport classes from './TimeLine.module.scss';\nimport convertNumToTIme from '../../helpers/convertNumToTime';\nimport getTimeLineData from '../../helpers/getTimeLineData';\n\nexport default ({ state }) => {\n  const [work, iteration, short, long] = state;\n  const { map, unit, timeIntervals, topMarks } = getTimeLineData(state);\n  const timeMarkHandler = (timeMark) => (\n    <TimeLineMark\n      key={uuid()}\n      leftShift={`${unit * timeMark.time}%`}\n      text={timeMark.text || convertNumToTIme(timeMark.time)}\n      markOpts={timeMark.opts}\n    />\n  );\n  const workProccess = [...Array(iteration.value)].map((_, index) => {\n    const returnedValue = [\n      <TimeLineSegment\n        key={uuid()}\n        segment=\"work\"\n        size={unit * work.value}\n      />,\n    ];\n    if (index !== iteration.value - 1) {\n      return [...returnedValue,\n        <TimeLineSegment\n          key={uuid()}\n          segment=\"shortBreak\"\n          size={unit * short.value}\n        />,\n      ];\n    }\n    return returnedValue;\n  });\n  const timeLineGraph = [workProccess,\n    <TimeLineSegment\n      key={uuid()}\n      segment=\"longBreak\"\n      size={unit * long.value}\n    />, workProccess];\n\n  const getMappedList = map(timeMarkHandler);\n  const topMarksContainer = getMappedList(topMarks);\n  const markLines = getMappedList(timeIntervals);\n\n  return (\n    <>\n      <h3 className={classes.Cycle}>Your cycle</h3>\n      <div className={classes.TimeLineWrapper}>\n        <div className={classes.TopMarksWrapper}>\n          {topMarksContainer}\n        </div>\n        <div className={classes.TimeLine}>\n          {timeLineGraph}\n        </div>\n        <div className={classes.BottomMarksWrapper}>\n          {markLines}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { curry } from 'ramda';\nimport convertNumToTIme from './convertNumToTime';\n\nexport default ([work, iteration, short, long]) => {\n  const map = curry((fn, arr) => arr.map(fn));\n  const workWithShortBreaks = work.value * iteration.value + (short.value * (iteration.value - 1));\n  const totalTime = (workWithShortBreaks * 2) + long.value;\n  const unit = 100 / totalTime;\n  const cycleTime = workWithShortBreaks + long.value;\n  let currentTime = 0;\n\n  const timeIntervals = [...Array(Math.floor(totalTime / 30))].map((_) => {\n    if ((currentTime + 30) < totalTime) {\n      currentTime += 30;\n    }\n    return { time: currentTime };\n  });\n  const topMarks = [\n    { text: convertNumToTIme(0), opts: 'Start' },\n    { text: `First cycle ${convertNumToTIme(cycleTime)}`, time: cycleTime },\n    { text: convertNumToTIme(totalTime), opts: 'End' },\n  ];\n  return {\n    map,\n    unit,\n    timeIntervals,\n    topMarks,\n  };\n};\n","export const SETTINGS = 'settings';\nexport const STATISTIC = 'statistic';\nexport const TASK_LIST = 'task-list';\nexport const POMODOROS = 'pomodoros';\nexport const CATEGORIES = 'categories';\nexport const LOGIN = 'login';\nexport const RESOLVED_ROUTES = [\n  `/${SETTINGS}`,\n  `/${SETTINGS}/`,\n  `/${SETTINGS}/${POMODOROS}`,\n  `/${SETTINGS}/${CATEGORIES}`,\n];","import React, { useEffect } from 'react';\n\nimport uuid from 'uuid/v1';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport SettingsControl from './SettingsControl/SettingsControl';\nimport TimeLine from '../TimeLine/TimeLine';\nimport Button from '../UI/Button/Button';\nimport classes from './SettingsControls.module.scss';\nimport * as actions from '../../store/actions';\nimport Spinner from '../UI/Spinner/Spinner';\nimport { TASK_LIST } from '../../constants/Routes';\n\nconst SettingsControls = ({\n  settings,\n  loading,\n  history,\n  onInitSettings,\n  onSaveSettings,\n  onResetSettings,\n}) => {\n  useEffect(() => {\n    onInitSettings();\n    return () => onResetSettings();\n  }, [onInitSettings, onResetSettings]);\n  const redirectToTasks = () => history.push(`/${TASK_LIST}`);\n  const saveSettingsHandler = () => onSaveSettings(settings);\n  return (\n    !loading\n      ? (\n        <div>\n          <form className={classes.SettingsControlForm} action=\"/\">\n            {settings.map((control) => (\n              <SettingsControl\n                key={uuid()}\n                title={control.title}\n                name={control.name}\n                minMax={{ min: control.min, max: control.max }}\n                value={control.value}\n                text={control.text}\n              />\n            ))}\n          </form>\n          {settings.length > 0 ? <TimeLine state={settings} /> : null}\n          <div className={classes.ButtonWrapper}>\n            <Button clickHandler={redirectToTasks} color=\"Blue\">Go to Tasks</Button>\n            <Button clickHandler={saveSettingsHandler} color=\"Green\">Save</Button>\n          </div>\n        </div>\n      )\n      : <Spinner />\n  );\n};\n\nconst mapStateToProps = ({ settings }) => ({\n  settings: settings.settingsArr,\n  loading: settings.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onInitSettings: () => dispatch(actions.initSettings()),\n  onSaveSettings: (settings) => dispatch(actions.updateSettings(settings)),\n  onResetSettings: () => dispatch(actions.resetSettings()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)((withRouter(SettingsControls)));\n","import React from 'react';\n\nimport SubTitle from '../SubTItle/SubTitle';\nimport SettingsControls from '../SettingsControls/SettingsControls';\n\nexport default () => (\n  <>\n    <SubTitle subTitle=\"Pomodoros settings\" />\n    <SettingsControls />\n  </>\n);\n","import React from 'react';\n\nimport classes from './CategoriesList.module.scss';\n\nexport default ({ children }) => (\n  <li className={[classes.ListItem, classes[children]].join(' ')}>\n    <span>{children}</span>\n  </li>\n);\n","import React from 'react';\n\nimport CategoryItem from './CategoryItem';\nimport classes from './CategoriesList.module.scss';\n\nconst categories = [\n  'Work',\n  'Education',\n  'Hobby',\n  'Sport',\n  'Other',\n];\n\nexport default () => {\n  const categoryList = categories.map((category) => (\n    <CategoryItem key={category}>\n      {category}\n    </CategoryItem>\n  ));\n\n  return (\n    <ul className={classes.List}>\n      {categoryList}\n    </ul>\n  );\n};\n","import React from 'react';\n\nimport { withRouter } from 'react-router-dom';\nimport SubTitle from '../SubTItle/SubTitle';\nimport CategoriesList from './CategoryList/CategoriesList';\nimport Button from '../UI/Button/Button';\nimport classes from './CategoryList/CategoriesList.module.scss';\nimport { TASK_LIST } from '../../constants/Routes';\n\nexport default withRouter(({ history }) => {\n  const redirectToTasks = () => {\n    history.push(`/${TASK_LIST}`);\n  };\n  return (\n    <>\n      <SubTitle subTitle=\"Categories list overview\" />\n      <CategoriesList />\n      <div className={classes.ButtonWrapper}>\n        <Button\n          color=\"Blue\"\n          clickHandler={redirectToTasks}\n        >\n          Go to Tasks\n        </Button>\n      </div>\n    </>\n  );\n});\n","import React from 'react';\n\nimport {\n  Route,\n  Switch,\n  withRouter,\n  Redirect,\n} from 'react-router-dom';\nimport PomodorosSettings from '../components/SettingsPomodoros/SettingsPomodoros';\nimport CategoryList from '../components/SettingsCategories/Categories';\nimport { POMODOROS, CATEGORIES } from '../constants/Routes';\n\nexport default withRouter(({ match }) => (\n  <Switch>\n    <Route path={`${match.path}/${POMODOROS}`} exact component={PomodorosSettings} />\n    <Route path={`${match.path}/${CATEGORIES}`} exact component={CategoryList} />\n    <Redirect from={`${match.path}`} exact to={`${match.path}/${POMODOROS}`} component={PomodorosSettings} />\n  </Switch>\n));\n","class Auth {\n  constructor() {\n    this.authentificated = true;\n  }\n\n  login() {\n    this.authentificated = true;\n  }\n\n  logout() {\n    this.authentificated = false;\n  }\n\n  isAuthenticated() {\n    return this.authentificated;\n  }\n}\n\nexport default new Auth();\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport auth from '../../auth';\n\nexport default (props) => {\n  const isAuth = !auth.isAuthenticated()\n    ? (\n      <Link to=\"/login\" style={{ color: 'white' }}>\n        Login\n      </Link>\n    )\n    : null;\n  return (\n    <div>\n      <h1>Not Found</h1>\n      {isAuth}\n    </div>\n  )\n};\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { RESOLVED_ROUTES } from '../../constants/Routes';\nimport NotFound from '../../containers/NotFound/NotFound';\n\nexport default withRouter(({ location, children }) => {\n  const isResolved = RESOLVED_ROUTES.find((item) => item === location.pathname);\n  let Component = children;\n  if (!isResolved) {\n    Component = <NotFound />;\n  }\n  return Component;\n});\n","import React from 'react';\n\nimport PageHeading from '../../components/PageHeading/PageHeading';\nimport Tabs from '../../components/Tabs/Tabs';\nimport SettingsRouter from '../../router/SettingsRouter';\nimport {\n  POMODOROS,\n  CATEGORIES,\n} from '../../constants/Routes';\nimport classes from './Settings.module.scss';\nimport ResolveRoute from '../../hoc/ResolveRoutes/ResolveRoute';\n\nexport default () => (\n  <ResolveRoute>\n    <PageHeading title=\"Settings\" />\n    <div className={classes.Wrapper}>\n      <Tabs elements={[POMODOROS, CATEGORIES]} />\n      <SettingsRouter />\n    </div>\n  </ResolveRoute>\n);\n","import React from 'react';\n\nexport default (props) => (\n  <div>\n    Statistic\n  </div>\n);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport auth from '../auth';\n\nexport default ({ component: Component, ...rest }) => (\n  <Route {...rest}\n    render={(props) => (auth.authentificated\n      ? <Component {...props} />\n      : <Redirect to=\"/\" />)}\n  />\n);\n","import React from 'react';\nimport auth from '../../auth';\n\nexport default (props) => (\n  <div>\n    <h1>Login Page</h1>\n    <button onClick={() => {\n      auth.login();\n      props.history.push('/task-list');\n    }}\n    >\n      Login\n    </button>\n  </div>\n);\n","import React from 'react';\n\nimport { Route, Switch } from 'react-router-dom';\nimport TaskList from '../containers/TaskList/TaskList';\nimport Settings from '../containers/Settings/Settings';\nimport Statistic from '../containers/Statistic/Statistic';\nimport ProtectedRoute from './ProtectedRoute';\nimport Login from '../containers/Login/Login';\nimport NotFound from '../containers/NotFound/NotFound';\nimport {\n  TASK_LIST,\n  SETTINGS,\n  STATISTIC,\n  LOGIN,\n} from '../constants/Routes';\n\nexport default () => (\n  <Switch>\n    <ProtectedRoute path={`/${TASK_LIST}`} component={TaskList} />\n    <ProtectedRoute path={`/${SETTINGS}`} component={Settings} />\n    <ProtectedRoute path={`/${STATISTIC}`} component={Statistic} />\n    <Route path={`/${LOGIN}`} component={Login} />\n    <Route path=\"*\" component={NotFound} />\n  </Switch>\n);\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport Logo from '../../assets/images/Logo.svg';\nimport classes from './Logo.module.scss';\n\nexport default ({ shown }) => (\n  <Link className={shown ? classes.Logo : classes.LogoHidden} to=\"/task-list\">\n    <img src={Logo} alt=\"Logo\" />\n  </Link>\n);\n","import React from 'react';\n\nimport { NavLink, withRouter } from 'react-router-dom';\nimport classes from './NavigationItem.module.scss';\nimport { SETTINGS, POMODOROS } from '../../../../constants/Routes';\n\nexport default withRouter(({ title, location }) => {\n  const locationPath = location.pathname.split('/');\n  let path = title === SETTINGS ? `${title}/${POMODOROS}` : title;\n  if (title === SETTINGS && locationPath.length > 2) {\n    path = `${title}/${locationPath[locationPath.length - 1]}`;\n  }\n\n  return (\n    <li className={classes.NavigationItem}>\n      <NavLink to={`/${path}`} className={`${classes.NavigationLink}`} activeClassName={classes.Active}>\n        <span className={`icon-${title}`} />\n      </NavLink>\n    </li>\n  );\n});\n","import React from 'react';\n\nimport NavigationItem from './NavigationItem/NavigationItem';\nimport classes from './NavigationItems.module.scss';\nimport {\n  TASK_LIST,\n  SETTINGS,\n  STATISTIC,\n} from '../../../constants/Routes';\n\nexport default (props) => (\n  <ul className={classes.Menu}>\n    {[TASK_LIST, STATISTIC, SETTINGS].map((item) => <NavigationItem title={item} key={item} />)}\n  </ul>\n);\n","import React, { useEffect, useState } from 'react';\nimport Logo from '../../components/Logo/Logo';\nimport classes from './Header.module.scss';\nimport NavigationItems from '../../components/Navigation/NavigationItems/NavigationItems';\n\nexport default () => {\n  const [fixedHeader, fixedHeaderHandler] = useState(false);\n  const headerClasses = fixedHeader ? [classes.Header, classes.Sticky] : [classes.Header];\n  const getScroll = () => {\n    const isScroll = window.pageYOffset > 50;\n    fixedHeaderHandler(isScroll);\n  };\n  useEffect(() => window.addEventListener('scroll', getScroll), []);\n  return (\n    <header className={headerClasses.join(' ')}>\n      <div className={classes.HeaderWrapper}>\n        <Logo shown={fixedHeader} />\n        <nav>\n          <NavigationItems />\n        </nav>\n      </div>\n    </header>\n  );\n};\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Router from '../../router/Router';\nimport Header from '../../containers/Header/Header';\nimport classes from './Layout.module.scss';\n\nexport default withRouter(() => (\n  <>\n    <Header />\n    <main className={classes.Layout}>\n      <Router />\n    </main>\n  </>\n));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  settingsArr: [],\n  loading: true,\n};\n\nconst settingControlsHandler = (state, action, dir) => {\n  const settingsItem = state.settingsArr.find((setting) => setting.name === action.name);\n  const {\n    value, min, max, step,\n  } = settingsItem;\n  if (dir === 'decr' && value > min) {\n    settingsItem.value -= step;\n  }\n  if (dir === 'incr' && value < max) {\n    settingsItem.value += step;\n  }\n  const newArr = [...state.settingsArr];\n  newArr[settingsItem] = settingsItem;\n  return { ...state, settingsArr: newArr };\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.RESET_SETTINGS:\n      return { ...state, settingsArr: [], loading: true };\n\n    case actionTypes.SET_SETTINGS:\n      return { ...state, settingsArr: action.settings, loading: false };\n\n    case actionTypes.INCREMENT_SETTINGS:\n      return settingControlsHandler(state, action, 'incr');\n\n    case actionTypes.DECREMENT_SETTINGS:\n      return settingControlsHandler(state, action, 'decr');\n\n    case actionTypes.SAVE_SETTINGS_START:\n      return { ...state, loading: true };\n\n    case actionTypes.SAVE_SETTINGS:\n      return { ...state, loading: false };\n\n    default:\n      return state;\n  }\n};\n","const getFormattedDate = (date) => {\n  const year = date.getFullYear();\n  const month = (1 + date.getMonth()).toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\nexport default () => [\n  {\n    labelName: 'Title',\n    placeholder: 'Add title here',\n    type: 'text',\n    value: '',\n  },\n  {\n    labelName: 'Description',\n    placeholder: 'Add description here',\n    type: 'text',\n    value: '',\n  },\n  {\n    labelName: 'Category',\n    placeholder: null,\n    type: 'radio',\n    value: 'Work',\n    checked: 'Work',\n    controlsList: [\n      'Work',\n      'Education',\n      'Hobby',\n      'Sport',\n      'Other',\n    ],\n  },\n  {\n    labelName: 'Deadline',\n    type: 'date',\n    value: getFormattedDate(new Date()),\n  },\n  {\n    labelName: 'Estimation',\n    type: 'radio',\n    value: '1',\n    checked: '1',\n    controlsList: ['1', '2', '3', '4', '5'],\n  },\n  {\n    labelName: 'Priority',\n    type: 'radio',\n    value: 'Urgent',\n    checked: 'Urgent',\n    controlsList: ['Urgent', 'High', 'Middle', 'Low'],\n  },\n];\n","import {\n  CLOSE_TASK_LIST_MODAL,\n  GET_TASKS,\n  ON_CHANGE_TASK_LIST_MODAL,\n  OPEN_TASK_LIST_MODAL,\n  SKIP_GREETING,\n  ON_SAVE_TASK,\n  ON_SAVE_TASK_START,\n} from '../actions/actionTypes';\nimport checkFirstVisit from '../../helpers/checkFirstVisit';\nimport taskForm from '../../constants/TaskFormOpts';\n\nconst initialState = {\n  tasks: {},\n  isFirstVisit: checkFirstVisit(),\n  isFirstTask: null,\n  isModalOpen: false,\n  loading: false,\n  taskFormOpts: [],\n};\n\nconst updateFormField = (state, action) => {\n  const { evt, id, prop } = action;\n  const { value } = evt.target;\n  const index = state.taskFormOpts.findIndex((item) => item.labelName === id);\n  const newState = [...state.taskFormOpts];\n\n  newState[index].value = value;\n\n  if (prop === 'checked') {\n    newState[index][prop] = value;\n  }\n\n  return { ...state, taskFormOpts: newState };\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TASKS:\n      return { ...state, tasks: action.payload.tasks, isFirstTask: action.payload.isFirstTask };\n\n    case SKIP_GREETING:\n      return { ...state, isFirstVisit: false };\n\n    case OPEN_TASK_LIST_MODAL:\n      return { ...state, taskFormOpts: taskForm(), isModalOpen: true };\n\n    case CLOSE_TASK_LIST_MODAL:\n      return { ...state, isModalOpen: false };\n\n    case ON_CHANGE_TASK_LIST_MODAL:\n      return updateFormField(state, action.payload);\n\n    case ON_SAVE_TASK_START:\n      return { ...state, loading: true };\n\n    case ON_SAVE_TASK:\n      return { ...state, loading: false, isModalOpen: false };\n\n    default:\n      return state;\n  }\n};\n","export default () => {\n  const isFirstVisit = sessionStorage.getItem('firstVisit');\n  sessionStorage.setItem('firstVisit', 'true');\n  return !isFirstVisit;\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport {\n  createStore,\n  combineReducers,\n  compose,\n  applyMiddleware,\n} from 'redux';\nimport './index.scss';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport settingsReducer from './store/reducers/settings';\nimport taskListReducer from './store/reducers/taskList';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  settings: settingsReducer,\n  taskList: taskListReducer,\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk),\n));\n\nReactDOM.render(\n <Provider store={store}>\n   <BrowserRouter>\n     <App />\n   </BrowserRouter>\n </Provider>,\n document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport Layout from './hoc/Layout/Layout';\n\nexport default () => (\n  <div className=\"App\">\n    <Layout />\n  </div>\n);\n"],"sourceRoot":""}