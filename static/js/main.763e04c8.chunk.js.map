{"version":3,"sources":["components/Tasks/Task.module.scss","components/TaskForm/Form.module.scss","components/TimeLine/TimeLine.module.scss","components/SettingsControls/SettingsControl/SettingsControl.module.scss","components/UI/Button/Button.module.scss","components/SettingsCategories/CategoryList/CategoriesList.module.scss","components/FilterBar/FilterBar.module.scss","containers/Header/Header.module.scss","components/Tabs/Tabs.module.scss","components/TaskListMessages/TaskListMessages.module.scss","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.scss","components/PageHeading/PageHeading.module.scss","components/UI/Modal/Modal.module.scss","containers/TaskList/TaskList.module.scss","components/SettingsControls/SettingsControls.module.scss","components/Logo/Logo.module.scss","components/AddTask/PlusBtn.module.scss","assets/images/tomato_settings.svg","assets/images/tomato-first.svg","assets/images/tomato-add.svg","components/UI/Spinner/Spinner.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/SubTItle/SubTitle.module.scss","containers/Settings/Settings.module.scss","assets/images/Logo.svg","components/Navigation/NavigationItems/NavigationItems.module.scss","hoc/Layout/Layout.module.scss","components/AddTask/PlusBtn.jsx","components/PageHeading/PageHeading.jsx","components/UI/Button/Button.jsx","constants/Texts.js","components/TaskListMessages/TaskListMessages.jsx","helpers/checkTaskState.js","components/UI/Spinner/Spinner.jsx","components/Tasks/Task.jsx","helpers/getTaskListConstants.js","helpers/isOverdue.js","components/FilterBar/FilterBar.jsx","constants/Filters.js","helpers/taskListUtils.js","axios.js","store/actions/taskList.js","store/actions/actionTypes.js","components/Tasks/Tasks.jsx","helpers/generateListConfigs.js","components/UI/Backdrop/Backdrop.jsx","components/UI/Modal/Modal.jsx","helpers/generateField.jsx","components/TaskForm/Field.jsx","components/TaskForm/Form.jsx","helpers/generateFormButtons.js","containers/TaskList/TaskList.jsx","components/Tabs/Tabs.jsx","components/SubTItle/SubTitle.jsx","components/SettingsControls/SettingsControl/SettingsControl.jsx","components/TimeLine/TimeLineSegment.jsx","components/TimeLine/TimeLineMark.jsx","helpers/convertNumToTime.js","components/TimeLine/TimeLine.jsx","helpers/getTimeLineData.js","constants/Routes.js","components/SettingsControls/SettingsControls.jsx","store/actions/settings.js","components/SettingsPomodoros/SettingsPomodoros.jsx","components/SettingsCategories/CategoryList/CategoryItem.jsx","components/SettingsCategories/CategoryList/CategoriesList.jsx","components/SettingsCategories/Categories.jsx","router/SettingsRouter.jsx","auth.js","containers/NotFound/NotFound.jsx","hoc/ResolveRoutes/ResolveRoute.jsx","containers/Settings/Settings.jsx","containers/Statistic/Statistic.jsx","router/ProtectedRoute.jsx","containers/Login/Login.jsx","router/Router.jsx","components/Logo/Logo.jsx","components/Navigation/NavigationItems/NavigationItem/NavigationItem.jsx","components/Navigation/NavigationItems/NavigationItems.jsx","components/UI/Button/HeaderButtons.jsx","containers/Header/Header.jsx","hoc/Layout/Layout.jsx","serviceWorker.js","store/reducers/settings.js","constants/TaskFormOpts.js","store/utils/getTasks.js","store/utils/setFields.js","store/utils/updateField.js","store/reducers/taskList.js","helpers/checkFirstVisit.js","index.js","App.js"],"names":["module","exports","showModal","onClick","className","classes","Button","title","HeadingContainer","Title","children","color","clickHandler","classNames","join","messages","skip","redirect","str","isFirstVisit","properties","icon","listSettings","text","tomatoFirst","addTask","checkTaskState","IconWrapper","src","alt","Text","ButtonWrapper","Loader","months","id","taskData","onEditTask","onMoveToDaily","deadlineDate","Date","deadline","day","getDate","month","getMonth","dateNow","additionalClass","task","isDaily","done","IS_DAILY_LIST","IS_DONE_LIST","IS_GLOBAL_LIST","getTaskListConstants","nextDay","toLocaleDateString","getTime","isOverdue","push","Overdue","dateBlockContent","Today","Month","taskClasses","Task","Category","category","Done","TaskInfo","priority","description","TaskButtons","TaskButton","fireBaseId","disabled","Priority","TomatoIcon","Estimation","estimation","marks","activeElement","handler","FilterList","map","item","isActive","FilterButton","Active","FilterItem","key","STATUS_FILTERS","PRIORITY_FILTERS","getUniqueCategory","compose","uniq","el","distributeByLists","curry","globalListFilter","isTaskEqualCategory","getCategoriesList","array","categoryName","data","filter","generateConfig","values","name","list","filters","active","isShown","instance","axios","create","baseURL","initTaskList","dispatch","get","then","res","type","payload","tasks","isFirstTask","Object","keys","length","startMovingToDaily","dataToSave","patch","connect","taskList","action","useState","topListActiveFilter","globalListActiveFilter","filterOptions","setFilterOptions","isGlobalListShown","setGlobalListVisibility","listsConfig","filterOpts","globalList","dailyList","topList","global","generateListConfigs","drawTask","obj","createGlobalList","categoryList","CategoryList","Circle","filterHandler","val","config","content","isGlobal","globalListIndicator","Fragment","GlobalListToggle","ShowButton","ShowListIndicator","FilterBar","onCLose","Backdrop","Container","Modal","radio","labelName","checked","value","placeholder","onChangeTaskListModal","identifier","radioClasses","Label","CheckedTomato","input","RadioInput","onChange","evt","Selected","RadioTitle","prop","props","isEstimation","generateField","controlsList","EstimationBlock","radioWrapper","EstimationRadioWrapper","RadioWrapper","getValueFromField","onCloseTaskListModal","onStartSaveTask","post","onStartUpdateTask","put","onStartDeleteTask","delete","taskFormOpts","editableTask","buttons","isEdit","handlers","cancelHandler","saveHandler","deleteHandler","formButtons","uuid","unshift","DeleteButton","reduce","nextObj","dataToSend","createData","completeDate","status","completedCount","failedPomodoros","modalContent","AddTaskTitle","field","ButtonsWrapper","Form","loading","Spinner","onInitTaskList","onSkipGreeting","onOpenTaskListModal","withRouter","history","useEffect","TaskListMessages","TaskList","AddTaskWrapper","PageHeading","PlusBtn","isModalOpen","elements","match","Tabs","elem","splitedPath","path","TabsItem","activeClassName","TabsLink","to","subTitle","SubTitle","range","onIncrement","onDecrement","settingsWord","min","max","Iteration","ShortBreak","LongBreak","Work","SettingsControl","htmlFor","ControlsWrapper","preventDefault","Input","readOnly","ControlDescription","segment","size","currentClass","WorkIteration","style","width","leftShift","markOpts","ShiftedMark","TimeLineMark","left","num","hours","Math","floor","minutes","time","state","work","iteration","short","long","fn","arr","workWithShortBreaks","totalTime","unit","cycleTime","currentTime","timeIntervals","Array","_","topMarks","convertNumToTIme","opts","getTimeLineData","workProccess","index","returnedValue","TimeLineSegment","timeLineGraph","getMappedList","timeMark","topMarksContainer","markLines","Cycle","TimeLineWrapper","TopMarksWrapper","TimeLine","BottomMarksWrapper","SETTINGS","STATISTIC","TASK_LIST","RESOLVED_ROUTES","settings","settingsArr","onInitSettings","catch","err","console","log","onSaveSettings","actions","onResetSettings","SettingsControlForm","control","ListItem","categories","CategoryItem","List","CategoriesList","exact","component","PomodorosSettings","from","this","authentificated","isAuth","auth","isAuthenticated","location","Component","find","pathname","NotFound","ResolveRoute","Wrapper","SettingsRouter","rest","render","login","ProtectedRoute","Settings","Statistic","Login","shown","Logo","LogoHidden","locationPath","split","NavigationItem","NavigationLink","Menu","useDispatch","TaskListButtons","fixed","TaskListItem","TaskListButton","isTaskList","isFixedHeader","fixedHeaderHandler","headerClasses","Header","Sticky","getScroll","isScroll","window","pageYOffset","addEventListener","HeaderWrapper","Actions","HeaderButtons","NavigationItems","Layout","Router","Boolean","hostname","initialState","settingControlsHandler","dir","settingsItem","setting","step","newArr","getFormattedDate","date","year","getFullYear","toString","padStart","desc","checkIsPropTruthy","checkIsTaskDaily","filterBy","daily","filterByLists","entries","taskListCopy","taskForm","target","findIndex","newState","sessionStorage","getItem","setItem","checkFirstVisit","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","rootReducer","combineReducers","getTasks","updateField","setFields","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.763e04c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CategoryList\":\"Task_CategoryList__3Yhah\",\"Education\":\"Task_Education__3nSc0\",\"Work\":\"Task_Work__HODFC\",\"Other\":\"Task_Other__215oW\",\"Sport\":\"Task_Sport__ZNCsV\",\"Hobby\":\"Task_Hobby__1vJIN\",\"Circle\":\"Task_Circle__3adse\",\"Title\":\"Task_Title__2bncP\",\"Task\":\"Task_Task__2w7Tt\",\"Category\":\"Task_Category__DxMPT\",\"Date\":\"Task_Date__348yD\",\"Overdue\":\"Task_Overdue__351q2\",\"Today\":\"Task_Today__15ILM\",\"Month\":\"Task_Month__32IdJ\",\"Urgent\":\"Task_Urgent__HhCBF\",\"High\":\"Task_High__dWf06\",\"Middle\":\"Task_Middle__2_3jY\",\"Low\":\"Task_Low__BuL1t\",\"Done\":\"Task_Done__3xFzd\",\"Priority\":\"Task_Priority__h3LMG\",\"TaskInfo\":\"Task_TaskInfo__2rUE5\",\"Estimation\":\"Task_Estimation__1xbRK\",\"TomatoIcon\":\"Task_TomatoIcon__1mEYG\",\"TaskButtons\":\"Task_TaskButtons__3-K6Z\",\"TaskButton\":\"Task_TaskButton__31x8s\",\"GlobalListToggle\":\"Task_GlobalListToggle__gwdYa\",\"ShowButton\":\"Task_ShowButton__3XjD8\",\"ShowListIndicator\":\"Task_ShowListIndicator__3H5T2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Form_Form__48job\",\"ButtonsWrapper\":\"Form_ButtonsWrapper__gu0Sk\",\"Button\":\"Form_Button__1uuJq\",\"DeleteButton\":\"Form_DeleteButton__31tyO\",\"RadioTitle\":\"Form_RadioTitle__3QWiG\",\"AddTaskTitle\":\"Form_AddTaskTitle__27cya\",\"Label\":\"Form_Label__rXWln\",\"RadioWrapper\":\"Form_RadioWrapper__2J-5E\",\"Selected\":\"Form_Selected__1NpiB\",\"RadioInput\":\"Form_RadioInput__2Xax5\",\"Work\":\"Form_Work__2nun0\",\"Education\":\"Form_Education__OVn6P\",\"Hobby\":\"Form_Hobby__VSigU\",\"Sport\":\"Form_Sport__2SfvF\",\"Other\":\"Form_Other__18VVA\",\"Urgent\":\"Form_Urgent__2T7DX\",\"High\":\"Form_High__3BTPk\",\"Middle\":\"Form_Middle__lC7FT\",\"Low\":\"Form_Low__MSZ8D\",\"EstimationBlock\":\"Form_EstimationBlock__3NMmz\",\"EstimationRadioWrapper\":\"Form_EstimationRadioWrapper__9qt5y\",\"CheckedTomato\":\"Form_CheckedTomato__1lY6I\",\"Category\":\"Form_Category__2zXz4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cycle\":\"TimeLine_Cycle__183H5\",\"TimeLineWrapper\":\"TimeLine_TimeLineWrapper__3rwQG\",\"TimeLine\":\"TimeLine_TimeLine__1v-ae\",\"TimeLineMark\":\"TimeLine_TimeLineMark__3Lkme\",\"ShiftedMark\":\"TimeLine_ShiftedMark__3yCgQ\",\"MarkWrapper\":\"TimeLine_MarkWrapper__2Qt1d\",\"TopMarksWrapper\":\"TimeLine_TopMarksWrapper__2hyN9\",\"BottomMarksWrapper\":\"TimeLine_BottomMarksWrapper__2iEIp\",\"Start\":\"TimeLine_Start__38h1q\",\"End\":\"TimeLine_End__3XWKm\",\"WorkIteration\":\"TimeLine_WorkIteration__3-KWl\",\"ShortBreak\":\"TimeLine_ShortBreak__2a9qX\",\"LongBreak\":\"TimeLine_LongBreak__TzQag\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SettingsControl\":\"SettingsControl_SettingsControl__3xTEQ\",\"Label\":\"SettingsControl_Label__2ctyB\",\"Work\":\"SettingsControl_Work__189-8\",\"Iteration\":\"SettingsControl_Iteration__3W35h\",\"ShortBreak\":\"SettingsControl_ShortBreak__SWeil\",\"LongBreak\":\"SettingsControl_LongBreak__3VuL0\",\"ControlsWrapper\":\"SettingsControl_ControlsWrapper__1tX4Z\",\"ControlDescription\":\"SettingsControl_ControlDescription__3x5eZ\",\"Input\":\"SettingsControl_Input__1FNIQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Ajf-\",\"Green\":\"Button_Green__3-UVv\",\"Blue\":\"Button_Blue__Mgv3_\",\"TaskListButtons\":\"Button_TaskListButtons__21XoU\",\"TaskListItem\":\"Button_TaskListItem__2AWIV\",\"TaskListButton\":\"Button_TaskListButton__3a4KU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"CategoriesList_List__1qgiK\",\"ButtonWrapper\":\"CategoriesList_ButtonWrapper__1OlI9\",\"ListItem\":\"CategoriesList_ListItem__2KRM-\",\"Work\":\"CategoriesList_Work__BwyrD\",\"Education\":\"CategoriesList_Education__3vFcm\",\"Hobby\":\"CategoriesList_Hobby__AHrpm\",\"Sport\":\"CategoriesList_Sport__1ACo5\",\"Other\":\"CategoriesList_Other__318kp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterList\":\"FilterBar_FilterList__v0UHj\",\"FilterItem\":\"FilterBar_FilterItem__pFnCj\",\"FilterButton\":\"FilterBar_FilterButton__Y4RP8\",\"Active\":\"FilterBar_Active__2f6Xk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__HQIlZ\",\"Sticky\":\"Header_Sticky__1W9vY\",\"HeaderWrapper\":\"Header_HeaderWrapper__2SROQ\",\"Actions\":\"Header_Actions__33XpN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tabs\":\"Tabs_Tabs__16Mtf\",\"TabsItem\":\"Tabs_TabsItem__3tFY5\",\"TabsLink\":\"Tabs_TabsLink__1iXv4\",\"Active\":\"Tabs_Active__2yZyb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IconWrapper\":\"TaskListMessages_IconWrapper__HnwQ_\",\"Text\":\"TaskListMessages_Text__1GDDX\",\"ButtonWrapper\":\"TaskListMessages_ButtonWrapper__2OUg6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1eVc8\",\"NavigationLink\":\"NavigationItem_NavigationLink__20mbT\",\"Active\":\"NavigationItem_Active__2wNbt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HeadingContainer\":\"PageHeading_HeadingContainer__1OAte\",\"Title\":\"PageHeading_Title__2nDtj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Modal_Container__1bc4A\",\"Modal\":\"Modal_Modal__31OI7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"TaskList_TaskList__3IHKv\",\"AddTaskWrapper\":\"TaskList_AddTaskWrapper__2XaY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SettingsControlForm\":\"SettingsControls_SettingsControlForm__3GwIp\",\"ButtonWrapper\":\"SettingsControls_ButtonWrapper__2w0wm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__d04QA\",\"LogoHidden\":\"Logo_LogoHidden__1JOev\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"PlusBtn_Button__2Nbd8\"};","module.exports = __webpack_public_path__ + \"static/media/tomato_settings.07c3fe0a.svg\";","module.exports = __webpack_public_path__ + \"static/media/tomato-first.a871b035.svg\";","module.exports = __webpack_public_path__ + \"static/media/tomato-add.40ce5e7a.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1Vve3\",\"load2\":\"Spinner_load2__MgRZO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__Vem4f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SubTitle\":\"SubTitle_SubTitle__1p3FR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Settings_Wrapper__tdKXN\"};","module.exports = __webpack_public_path__ + \"static/media/Logo.73bf16d2.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"NavigationItems_Menu__3_JHW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__ACkHP\"};","import React from 'react';\nimport classes from './PlusBtn.module.scss';\n\nexport default ({ showModal }) => (\n  <button onClick={showModal} className={classes.Button}>\n    <span className=\"icon-add\" />\n  </button>\n);\n","import React from 'react';\nimport classes from './PageHeading.module.scss';\n\nexport default ({ title }) => (\n  <section className={classes.HeadingContainer}>\n    <h2 className={classes.Title}>{title}</h2>\n  </section>\n);\n","import React from 'react';\n\nimport classes from './Button.module.scss';\n\nexport default ({children, color, clickHandler}) => {\n  const classNames = [classes.Button, classes[color]];\n  return (\n    <button onClick={clickHandler} className={classNames.join(' ')}>\n      {children}\n    </button>\n  );\n}","export const messages = {\n  firstVisit: 'As you visited our site for a first time you can check and customize your default application settings',\n  firstTask: 'Add your first task',\n  noTasks: 'You don’t have any tasks left. Add new tasks to stay productive.',\n};\n","import React from 'react';\nimport classes from './TaskListMessages.module.scss';\nimport Button from '../UI/Button/Button';\nimport checkTaskState from '../../helpers/checkTaskState';\n\nexport default ({\n  skip,\n  redirect,\n  str,\n  isFirstVisit,\n}) => {\n  const properties = checkTaskState(str);\n  return (\n    <>\n      <div className={classes.IconWrapper}>\n        <img src={properties.icon} alt=\"Tomato\" />\n      </div>\n      <h2 className={classes.Text}>\n        {properties.text}\n      </h2>\n      {isFirstVisit\n        ? (\n          <div className={classes.ButtonWrapper}>\n            <Button clickHandler={skip} color=\"Blue\">Skip</Button>\n            <Button clickHandler={redirect} color=\"Green\">Go to Settings</Button>\n          </div>\n        )\n        : null}\n    </>\n  );\n};\n","import { messages } from '../constants/Texts';\nimport listSettings from '../assets/images/tomato_settings.svg';\nimport tomatoFirst from '../assets/images/tomato-first.svg';\nimport addTask from '../assets/images/tomato-add.svg';\n\nexport default (str) => {\n  const properties = { icon: listSettings, text: messages.firstVisit };\n  switch (str) {\n    case 'firstVisit':\n      return properties;\n\n    case 'firstTask':\n      properties.icon = tomatoFirst;\n      properties.text = messages.firstTask;\n      return properties;\n\n    default:\n      properties.icon = addTask;\n      properties.text = messages.noTasks;\n      return properties;\n  }\n};\n","import React from 'react';\n\nimport classes from './Spinner.module.scss';\n\nexport default () => (\n  <div className={classes.Loader}>Loading...</div>\n);\n","import React from 'react';\nimport isOverdue from '../../helpers/isOverdue';\nimport getTaskListConstants from '../../helpers/getTaskListConstants';\nimport classes from './Task.module.scss';\n\nconst months = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nexport default ({id, taskData, onEditTask, onMoveToDaily}) => {\n  const deadlineDate = new Date(taskData.deadline);\n  const day = deadlineDate.getDate();\n  const month = months[deadlineDate.getMonth()];\n  const dateNow = new Date();\n  const additionalClass = [classes.Date];\n  const { IS_DAILY_LIST, IS_DONE_LIST ,IS_GLOBAL_LIST } = getTaskListConstants(taskData);\n\n  if (isOverdue(dateNow, deadlineDate)) {\n    additionalClass.push(classes.Overdue);\n  }\n\n  const dateBlockContent = (\n    !IS_DAILY_LIST\n      ? (\n        <>\n          <span>{day}</span>\n          <span className={classes.Month}>{month}</span>\n        </>\n      )\n      : <span className={classes.Today}>today</span>\n  );\n\n  const taskClasses = IS_DONE_LIST\n    ? `${classes.Task} ${classes.Category} ${classes[taskData.category]} ${classes.Done}`\n    : `${classes.Task} ${classes.Category} ${classes[taskData.category]}`;\n\n  return (\n    <div className={taskClasses}>\n      <p className={additionalClass.join(' ')}>\n        {dateBlockContent}\n      </p>\n      <p className={classes.TaskInfo}>\n        <span className={classes[taskData.priority]}>{taskData.title}</span>\n        <span>{taskData.description}</span>\n      </p>\n      <p className={classes.TaskButtons}>\n        {\n          IS_GLOBAL_LIST\n          && <button\n            className={`${classes.TaskButton} icon-arrows-up`}\n            onClick={() => onMoveToDaily(id, taskData)}\n          />\n        }\n        {\n          !IS_DONE_LIST\n          && <button\n            className={`${classes.TaskButton} icon-edit`}\n            onClick={() => onEditTask({ ...taskData, fireBaseId: id })}\n          />\n        }\n      </p>\n      <button\n        disabled={IS_DONE_LIST}\n        className={`${classes.Priority} ${classes[taskData.priority]}`}\n      >\n        <span className={`${classes.TomatoIcon} icon-tomato`}/>\n        <span className={classes.Estimation}>{taskData.estimation}</span>\n      </button>\n    </div>\n  );\n};\n","export default (task) => {\n  const { isDaily, done } = task;\n\n  return {\n    IS_DAILY_LIST: isDaily,\n    IS_DONE_LIST: done,\n    IS_GLOBAL_LIST: !isDaily && !done,\n  };\n};\n","export default (dateNow, deadlineDate) => {\n  const nextDay = new Date(dateNow.toLocaleDateString('en-US'));\n\n  return deadlineDate.getTime() < nextDay.getTime();\n};\n","import React from 'react';\nimport classes from './FilterBar.module.scss';\n\nexport default ({ marks, activeElement, handler }) => (\n  <ul className={classes.FilterList}>\n    {marks.map(item => {\n      const isActive = item === activeElement\n        ? `${classes.FilterButton} ${classes.Active}`\n        : classes.FilterButton;\n\n      return (\n        <li\n          className={classes.FilterItem}\n          key={item}\n        >\n          <button\n            className={isActive}\n            onClick={() => handler(item)}\n          >\n            {item}\n          </button>\n        </li>\n      );\n    })}\n  </ul>\n);\n","export const STATUS_FILTERS = ['toDo', 'done'];\n\nexport const PRIORITY_FILTERS = ['All', 'Urgent', 'High', 'Middle', 'Low'];\n\nexport const DEFAULT_STATUS_FILTER = 'toDo';\n\nexport const DEFAULT_PRIORITY_FILTER = 'All';\n","import { compose, curry, filter, map, uniq } from 'ramda';\nimport { DEFAULT_PRIORITY_FILTER } from '../constants/Filters';\n\nexport const getUniqueCategory = compose(uniq, map((el) => el[1].category));\n\nexport const distributeByLists = curry((globalListFilter, category, el) => {\n  const [, task] = el;\n  const isTaskEqualCategory = task.category === category;\n\n  return globalListFilter === DEFAULT_PRIORITY_FILTER\n    ? isTaskEqualCategory\n    : isTaskEqualCategory && task.priority === globalListFilter;\n});\n\nexport const getCategoriesList = curry((array, globalListFilter, category) => {\n  const getGlobalList = filter(distributeByLists(globalListFilter, category), array);\n\n  return { categoryName: category, data: getGlobalList };\n});\n\nexport const generateConfig = (...values) => {\n  const [name, list, filters, active, isShown] = values;\n\n  return {\n    name,\n    list,\n    filters,\n    active,\n    isShown,\n  };\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://productivity-react.firebaseio.com/',\n});\n\nexport default instance;\n","import * as actionTypes from './actionTypes';\nimport axios from '../../axios';\n\nexport const getTasks = (tasks) => ({\n  type: actionTypes.GET_TASKS,\n  payload: {\n    tasks,\n    isFirstTask: !Object.keys(tasks).length,\n  },\n});\n\nexport const skipGreeting = () => ({\n  type: actionTypes.SKIP_GREETING,\n});\n\nexport const initTaskList = () => (dispatch) => {\n  axios.get('tasks.json')\n    .then((res) => dispatch(getTasks(res.data || {})));\n};\n\nexport const openTaskListModal = () => ({\n  type: actionTypes.OPEN_TASK_LIST_MODAL,\n});\n\nexport const closeTaskListModal = () => ({\n  type: actionTypes.CLOSE_TASK_LIST_MODAL,\n});\n\nexport const changeTaskListModal = (evt, id, prop) => ({\n  type: actionTypes.CHANGE_TASK_LIST_MODAL,\n  payload: { evt, id, prop },\n});\n\nexport const saveTask = () => ({\n  type: actionTypes.SAVE_TASK,\n});\n\nexport const editTask = (data) => ({\n  type: actionTypes.EDIT_TASK,\n  payload: data,\n});\n\nexport const updateTask = () => ({\n  type: actionTypes.UPDATE_TASK,\n});\n\nexport const deleteTask = () => ({\n  type: actionTypes.DELETE_TASK,\n});\n\nexport const moveToDaily = () => ({\n  type: actionTypes.MOVE_TO_DAILY,\n});\n\nexport const startMovingToDaily = (id, data) => (dispatch) => {\n  dispatch({ type: actionTypes.START_MOVING_TO_DAILY });\n\n  const dataToSave = { ...data, isDaily: true };\n\n  axios.patch(`tasks/${id}.json`, dataToSave)\n    .then(() => {\n      dispatch(moveToDaily());\n      dispatch(initTaskList());\n    });\n};\n\nexport const startSaveTask = (data) => (dispatch) => {\n  dispatch({ type: actionTypes.START_SAVING_TASK });\n  axios.post('tasks.json', data)\n    .then(() => {\n      dispatch(saveTask());\n      dispatch(initTaskList());\n    });\n};\n\nexport const startUpdateTask = (data, id) => (dispatch) => {\n  dispatch({ type: actionTypes.START_UPDATING_TASK });\n  axios.put(`tasks/${id}.json`, data)\n    .then(() => {\n      dispatch(updateTask());\n      dispatch(initTaskList());\n    });\n};\n\nexport const startDeleteTask = (id) => (dispatch) => {\n  dispatch({ type: actionTypes.START_DELETING_TASK });\n  axios.delete(`tasks/${id}.json`)\n    .then(() => {\n      dispatch(deleteTask());\n      dispatch(initTaskList());\n    });\n};\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const INCREMENT_SETTINGS = 'INCREMENT_SETTINGS';\nexport const DECREMENT_SETTINGS = 'DECREMENT_SETTINGS';\nexport const START_SAVING_SETTINGS = 'START_SAVING_SETTINGS';\nexport const SAVE_SETTINGS = 'SAVE_SETTINGS';\nexport const RESET_SETTINGS = 'RESET_SETTINGS';\nexport const GET_TASKS = 'GET_TASKS';\nexport const SKIP_GREETING = 'SKIP_GREETING';\nexport const OPEN_TASK_LIST_MODAL = 'OPEN_TASK_LIST_MODAL';\nexport const CLOSE_TASK_LIST_MODAL = 'CLOSE_TASK_LIST_MODAL';\nexport const CHANGE_TASK_LIST_MODAL = 'CHANGE_TASK_LIST_MODAL';\nexport const START_SAVING_TASK = 'START_SAVING_TASK';\nexport const SAVE_TASK = 'SAVE_TASK';\nexport const START_INIT_TASKS = 'START_INIT_TASKS';\nexport const EDIT_TASK = 'EDIT_TASK';\nexport const START_UPDATING_TASK = 'START_UPDATING_TASK';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const START_DELETING_TASK = 'START_DELETING_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const START_MOVING_TO_DAILY = 'START_MOVING_TO_DAILY';\nexport const MOVE_TO_DAILY = 'MOVE_TO_DAILY';\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { curry, map } from 'ramda';\nimport Task from './Task';\nimport FilterBar from '../FilterBar/FilterBar';\nimport generateListConfigs from '../../helpers/generateListConfigs';\nimport * as action from '../../store/actions';\nimport { DEFAULT_STATUS_FILTER, DEFAULT_PRIORITY_FILTER } from '../../constants/Filters';\nimport classes from './Task.module.scss';\n\nconst Tasks = ({ taskList, onEditTask, onMoveToDaily }) => {\n  const [filterOptions, setFilterOptions] = useState(\n    { topListActiveFilter: DEFAULT_STATUS_FILTER, globalListActiveFilter: DEFAULT_PRIORITY_FILTER },\n  );\n  const [isGlobalListShown, setGlobalListVisibility] = useState(false);\n  const listsConfig = generateListConfigs(taskList.tasks, filterOptions, isGlobalListShown);\n\n  const drawTask = map((item) => {\n    const [fireBaseId, obj] = item;\n    return (\n      <Task\n        key={fireBaseId}\n        id={fireBaseId}\n        taskData={obj}\n        onEditTask={onEditTask}\n        onMoveToDaily={onMoveToDaily}\n      />\n    );\n  });\n\n  const createGlobalList = (el) => {\n    const { categoryName, data } = el;\n    let categoryList = null;\n\n    if (data.length && isGlobalListShown) {\n      categoryList = (\n        <div\n          className={`${classes.CategoryList} ${classes[categoryName]}`}\n          key={categoryName}\n        >\n          <span className={`${classes.Circle} ${classes[categoryName]}`} />\n          <h3 className={`${classes.Title} ${classes[categoryName]}`}>{categoryName}</h3>\n          {drawTask(data)}\n        </div>\n      );\n    }\n\n    return categoryList;\n  };\n\n  const filterHandler = curry((name, val) => {\n    if (name === 'global') {\n      setFilterOptions({ ...filterOptions, globalListActiveFilter: val });\n    } else {\n      setFilterOptions({ ...filterOptions, topListActiveFilter: val });\n    }\n  });\n\n  return (\n    <>\n      {listsConfig.map((config) => {\n        const {\n          name, list, filters, active, isShown,\n        } = config;\n        const isGlobal = name === 'global';\n        const globalListIndicator = isShown\n          ? 'icon-global-list-arrow-down'\n          : 'icon-global-list-arrow-right';\n        let content;\n\n        if (isGlobal) {\n          content = map(createGlobalList, list);\n        } else {\n          content = drawTask(list);\n        }\n        return (\n          <React.Fragment key={name}>\n            {\n              isGlobal\n              && (\n                <div className={classes.GlobalListToggle}>\n                  <button\n                    className={classes.ShowButton}\n                    onClick={() => setGlobalListVisibility(!isGlobalListShown)}\n                  >\n                    <span>Global List</span>\n                    <span className={`${classes.ShowListIndicator} ${globalListIndicator}`} />\n                  </button>\n                </div>\n              )\n            }\n            {\n              isShown\n              && (\n                <div>\n                  <FilterBar\n                    handler={filterHandler(name)}\n                    marks={filters}\n                    activeElement={active}\n                  />\n                  {content}\n                </div>\n              )\n            }\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n};\n\nconst mapStateToProps = ({ taskList }) => ({\n  taskList,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onEditTask: (data) => dispatch(action.editTask(data)),\n  onMoveToDaily: (id, data) => dispatch(action.startMovingToDaily(id, data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tasks);\n","import { map, compose } from 'ramda';\nimport { STATUS_FILTERS, PRIORITY_FILTERS, DEFAULT_STATUS_FILTER } from '../constants/Filters';\nimport { getUniqueCategory, getCategoriesList, generateConfig } from './taskListUtils';\n\nexport default (tasks, filterOpts, isGlobalListShown) => {\n  const { topListActiveFilter, globalListActiveFilter } = filterOpts;\n  const { globalList, dailyList, done } = tasks;\n\n  const topList = topListActiveFilter === DEFAULT_STATUS_FILTER\n    ? dailyList\n    : done;\n  const global = compose(\n    map(getCategoriesList(globalList, globalListActiveFilter)),\n    getUniqueCategory,\n  )(globalList);\n\n  return [\n    generateConfig('top', topList, STATUS_FILTERS, topListActiveFilter, true),\n    generateConfig('global', global, PRIORITY_FILTERS, globalListActiveFilter, isGlobalListShown),\n  ];\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classes from './Backdrop.module.scss';\nimport * as action from '../../../store/actions';\n\nconst Backdrop = ({ onCLose }) => (\n    <div\n      className={classes.Backdrop}\n      onClick={onCLose}\n    />\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n  onCLose: () => dispatch(action.closeTaskListModal()),\n});\n\nexport default connect(null, mapDispatchToProps)(Backdrop);\n","import React from 'react';\nimport Backdrop from '../Backdrop/Backdrop';\nimport classes from './Modal.module.scss';\n\nexport default ({ children }) => (\n  <div className={classes.Container}>\n    <Backdrop />\n    <div className={classes.Modal}>\n      {children}\n    </div>\n  </div>\n);\n","import React from 'react';\nimport classes from '../components/TaskForm/Form.module.scss';\n\nexport default ({\n  type,\n  radio,\n  labelName,\n  checked,\n  value,\n  placeholder,\n  onChangeTaskListModal,\n}) => {\n  const identifier = (type === 'radio')\n    ? radio\n    : labelName;\n  const radioClasses = (labelName === 'estimation' && radio === checked)\n    ? [classes.Label, classes.CheckedTomato]\n    : [classes.Label];\n  const input = type === 'radio'\n    ? (\n      <>\n        <input\n          className={classes.RadioInput}\n          onChange={(evt) => onChangeTaskListModal(evt, labelName, 'checked')}\n          type={type}\n          value={identifier}\n          checked={radio === checked}\n        />\n        <span className={classes[identifier]} />\n      </>\n    )\n    : (\n      <input\n        onChange={(evt) => onChangeTaskListModal(evt, labelName, 'value')}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n      />\n    );\n\n  if (radio === checked) {\n    radioClasses.push(classes.Selected);\n  }\n\n  return (\n    <label className={radioClasses.join(' ')} key={identifier}>\n      <h4 className={classes.RadioTitle}>{labelName !== 'estimation' && identifier}</h4>\n      {input}\n    </label>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classes from './Form.module.scss';\nimport * as action from '../../store/actions';\nimport generateField from '../../helpers/generateField';\n\nconst Field = (props) => {\n  const isEstimation = props.labelName === 'estimation';\n  let content = generateField(props);\n\n  if (props.controlsList) {\n    const additionalClass = isEstimation\n      ? classes.EstimationBlock\n      : null;\n    const radioWrapper = isEstimation\n      ? classes.EstimationRadioWrapper\n      : classes.RadioWrapper;\n\n    content = (\n      <div className={[additionalClass, classes.Category].join(' ')}>\n        <h4 className={classes.RadioTitle}>{props.labelName}</h4>\n        <div className={radioWrapper}>\n          {props.controlsList.map((radio) => generateField({ ...props, radio }))}\n        </div>\n      </div>\n    );\n  }\n  return content;\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChangeTaskListModal: (evt, id, prop) => dispatch(action.changeTaskListModal(evt, id, prop)),\n});\n\nexport default connect(null, mapDispatchToProps)(Field);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport uuid from 'uuid/v1';\nimport * as action from '../../store/actions';\nimport classes from './Form.module.scss';\nimport Spinner from '../UI/Spinner/Spinner';\nimport formButtons from '../../helpers/generateFormButtons';\nimport TaskFormField from './Field';\n\nconst getValueFromField = (data) => {\n  const { labelName, value } = data;\n\n  return { [labelName]: value };\n};\n\nconst Form = ({\n  taskList,\n  onCloseTaskListModal,\n  onStartSaveTask,\n  onStartUpdateTask,\n  onStartDeleteTask,\n}) => {\n  const { taskFormOpts, editableTask } = taskList;\n\n  const cancelHandler = () => {\n    onCloseTaskListModal();\n  };\n  const saveHandler = () => {\n    const data = taskFormOpts.map(getValueFromField);\n    const taskData = data.reduce((obj, nextObj) => ({ ...obj, ...nextObj }));\n    const dataToSend = {\n      id: uuid(),\n      createData: new Date(),\n      completeDate: null,\n      status: null,\n      completedCount: 0,\n      failedPomodoros: [],\n      isDaily: false,\n      done: false,\n      ...taskData,\n    };\n\n    if (editableTask) {\n      onStartUpdateTask(dataToSend, editableTask);\n    } else {\n      onStartSaveTask(dataToSend);\n    }\n  };\n\n  const deleteHandler = () => {\n    onStartDeleteTask(editableTask);\n  };\n  const buttons = formButtons(editableTask, [cancelHandler, saveHandler, deleteHandler]);\n  const modalContent = (\n    <>\n      <h3 className={classes.AddTaskTitle}>\n        {taskList.editableTask ? 'Edit Task' : 'Add Task'}\n      </h3>\n      {taskFormOpts.map((field) => (\n        <TaskFormField\n          key={field.labelName}\n          {...field}\n        />\n      ))}\n      <div className={classes.ButtonsWrapper}>\n        {buttons.map((item) => (\n          <button\n            key={item.id}\n            className={item.classes}\n            onClick={item.handler}\n          />\n        ))}\n      </div>\n    </>\n  );\n\n  return (\n    <form className={classes.Form}>\n      {taskList.loading\n        ? <Spinner />\n        : modalContent}\n    </form>\n  );\n};\n\nconst mapStateToProps = ({ taskList }) => ({\n  taskList,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onCloseTaskListModal: () => dispatch(action.closeTaskListModal()),\n  onStartSaveTask: (data) => dispatch(action.startSaveTask(data)),\n  onStartUpdateTask: (data, id) => dispatch(action.startUpdateTask(data, id)),\n  onStartDeleteTask: (id) => dispatch(action.startDeleteTask(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import uuid from 'uuid/v1';\nimport classes from '../components/TaskForm/Form.module.scss';\n\nexport default (isEdit, handlers) => {\n  const [cancelHandler, saveHandler, deleteHandler] = handlers;\n  const formButtons = [\n    {\n      id: uuid(),\n      classes: `${classes.Button} icon-close`,\n      handler: cancelHandler,\n    },\n    {\n      id: uuid(),\n      classes: `${classes.Button} icon-check`,\n      handler: saveHandler,\n    },\n  ];\n\n  if (isEdit) {\n    formButtons.unshift(\n      {\n        id: uuid(),\n        classes: `${classes.Button} ${classes.DeleteButton} icon-trash`,\n        handler: deleteHandler,\n      },\n    );\n  }\n\n  return formButtons;\n};\n","import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PlusBtn from '../../components/AddTask/PlusBtn';\nimport PageHeading from '../../components/PageHeading/PageHeading';\nimport TaskListMessages from '../../components/TaskListMessages/TaskListMessages';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Tasks from '../../components/Tasks/Tasks';\nimport Modal from '../../components/UI/Modal/Modal';\nimport TaskForm from '../../components/TaskForm/Form';\nimport classes from './TaskList.module.scss';\nimport * as action from '../../store/actions/index';\n\nconst TaskList = ({\n  history,\n  taskList,\n  onInitTaskList,\n  onSkipGreeting,\n  onOpenTaskListModal,\n}) => {\n  useEffect(() => {\n    onInitTaskList();\n  }, [onInitTaskList]);\n\n  const redirectToSettings = () => {\n    onSkipGreeting();\n    history.push('/settings');\n  };\n  let content = <Spinner />;\n\n  if (taskList.tasks.globalList) {\n    content = <Tasks />;\n  }\n  if (taskList.isFirstTask || taskList.isFirstVisit) {\n    content = (\n      <TaskListMessages\n        skip={onSkipGreeting}\n        redirect={redirectToSettings}\n        str={taskList.isFirstVisit ? 'firstVisit' : 'firstTask'}\n        isFirstVisit={taskList.isFirstVisit}\n      />\n    );\n  }\n  return (\n    <div className={classes.TaskList}>\n      <div className={classes.AddTaskWrapper}>\n        <PageHeading title=\"Daily Task List\" />\n        <PlusBtn showModal={onOpenTaskListModal} />\n      </div>\n      {content}\n      {taskList.isModalOpen\n        && (\n          <Modal>\n            <TaskForm />\n          </Modal>\n        )}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ taskList }) => ({\n  taskList,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onInitTaskList: () => dispatch(action.initTaskList()),\n  onSkipGreeting: () => dispatch(action.skipGreeting()),\n  onOpenTaskListModal: () => dispatch(action.openTaskListModal()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TaskList));\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport classes from './Tabs.module.scss';\n\nexport default withRouter(({ elements, match }) => (\n  <ul className={classes.Tabs}>\n    {elements.map((elem) => {\n      const splitedPath = `${match.path}/${elem}`;\n      return (\n        <li className={classes.TabsItem} key={elem}>\n          <NavLink\n            activeClassName={classes.Active}\n            className={classes.TabsLink}\n            to={splitedPath}\n          >\n            {elem}\n          </NavLink>\n        </li>\n      );\n    })}\n  </ul>\n));\n","import React from 'react';\nimport classes from './SubTitle.module.scss';\n\nexport default ({ subTitle }) => (\n  <h3 className={classes.SubTitle}>{subTitle}</h3>\n);\n","import React from 'react';\nimport classes from './SettingsControl.module.scss';\n\nexport default ({\n  title,\n  name,\n  value,\n  range,\n  text,\n  onIncrement,\n  onDecrement,\n}) => {\n  const settingsWord = name !== 'iteration' ? ' minutes' : ' iterations';\n  const { min, max } = range;\n  const categoryName = [classes.Label];\n  switch (name) {\n    case ('iteration'):\n      categoryName.push(classes.Iteration);\n      break;\n    case ('shortBreak'):\n      categoryName.push(classes.ShortBreak);\n      break;\n    case ('longBreak'):\n      categoryName.push(classes.LongBreak);\n      break;\n    default:\n      categoryName.push(classes.Work);\n  }\n  return (\n    <div className={classes.SettingsControl}>\n      <label className={categoryName.join(' ')} htmlFor={name}>\n        {title}\n      </label>\n      <div className={classes.ControlsWrapper}>\n        <button\n          className=\"icon-minus\"\n          disabled={value === min}\n          onClick={(evt) => {\n            evt.preventDefault();\n            onDecrement(name);\n          }}\n        />\n        <input className={classes.Input} type=\"text\" value={value} readOnly name={name} />\n        <button\n          className=\"icon-add\"\n          disabled={value === max}\n          onClick={(evt) => {\n            evt.preventDefault();\n            onIncrement(name);\n          }}\n        />\n      </div>\n      <p className={classes.ControlDescription}>\n        {text}\n        <span>{settingsWord}</span>\n      </p>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport classes from './TimeLine.module.scss';\n\nexport default ({ segment, size }) => {\n  let currentClass = null;\n  switch (segment) {\n    case ('work'):\n      currentClass = classes.WorkIteration;\n      break;\n    case ('shortBreak'):\n      currentClass = classes.ShortBreak;\n      break;\n    default:\n      currentClass = classes.LongBreak;\n  }\n\n  return (\n    (\n      <div\n        className={currentClass}\n        style={{ width: `${size}%` }}\n      />\n    )\n  );\n};\n","import React from 'react';\n\nimport classes from './TimeLine.module.scss';\n\nexport default ({ text, leftShift, markOpts }) => {\n  const additionalClass = markOpts ? classes[markOpts] : classes.ShiftedMark;\n  const classNames = [classes.TimeLineMark, additionalClass];\n  return (\n    <p className={classNames.join(' ')} style={{ left: leftShift }}>\n      <span>{text}</span>\n    </p>\n  );\n};\n","export default (num) => {\n  const hours = Math.floor(num / 60);\n  const minutes = num % 60;\n  let time = `${hours}h ${minutes} m `;\n  if (hours === 0) {\n    time = `${minutes} m`;\n  }\n  if (minutes === 0) {\n    time = `${hours}h`;\n  }\n  return time;\n};\n","import React from 'react';\n\nimport uuid from 'uuid/v1';\nimport TimeLineSegment from './TimeLineSegment';\nimport TimeLineMark from './TimeLineMark';\nimport classes from './TimeLine.module.scss';\nimport convertNumToTIme from '../../helpers/convertNumToTime';\nimport getTimeLineData from '../../helpers/getTimeLineData';\n\nexport default ({ state }) => {\n  const [work, iteration, short, long] = state;\n  const { map, unit, timeIntervals, topMarks } = getTimeLineData(state);\n  const timeMarkHandler = (timeMark) => (\n    <TimeLineMark\n      key={uuid()}\n      leftShift={`${unit * timeMark.time}%`}\n      text={timeMark.text || convertNumToTIme(timeMark.time)}\n      markOpts={timeMark.opts}\n    />\n  );\n  const workProccess = [...Array(iteration.value)].map((_, index) => {\n    const returnedValue = [\n      <TimeLineSegment\n        key={uuid()}\n        segment=\"work\"\n        size={unit * work.value}\n      />,\n    ];\n    if (index !== iteration.value - 1) {\n      return [...returnedValue,\n        <TimeLineSegment\n          key={uuid()}\n          segment=\"shortBreak\"\n          size={unit * short.value}\n        />,\n      ];\n    }\n    return returnedValue;\n  });\n  const timeLineGraph = [workProccess,\n    <TimeLineSegment\n      key={uuid()}\n      segment=\"longBreak\"\n      size={unit * long.value}\n    />, workProccess];\n\n  const getMappedList = map(timeMarkHandler);\n  const topMarksContainer = getMappedList(topMarks);\n  const markLines = getMappedList(timeIntervals);\n\n  return (\n    <>\n      <h3 className={classes.Cycle}>Your cycle</h3>\n      <div className={classes.TimeLineWrapper}>\n        <div className={classes.TopMarksWrapper}>\n          {topMarksContainer}\n        </div>\n        <div className={classes.TimeLine}>\n          {timeLineGraph}\n        </div>\n        <div className={classes.BottomMarksWrapper}>\n          {markLines}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { curry } from 'ramda';\nimport convertNumToTIme from './convertNumToTime';\n\nexport default ([work, iteration, short, long]) => {\n  const map = curry((fn, arr) => arr.map(fn));\n  const workWithShortBreaks = work.value * iteration.value + (short.value * (iteration.value - 1));\n  const totalTime = (workWithShortBreaks * 2) + long.value;\n  const unit = 100 / totalTime;\n  const cycleTime = workWithShortBreaks + long.value;\n  let currentTime = 0;\n\n  const timeIntervals = [...Array(Math.floor(totalTime / 30))].map((_) => {\n    if ((currentTime + 30) < totalTime) {\n      currentTime += 30;\n    }\n    return { time: currentTime };\n  });\n  const topMarks = [\n    { text: convertNumToTIme(0), opts: 'Start' },\n    { text: `First cycle ${convertNumToTIme(cycleTime)}`, time: cycleTime },\n    { text: convertNumToTIme(totalTime), opts: 'End' },\n  ];\n  return {\n    map,\n    unit,\n    timeIntervals,\n    topMarks,\n  };\n};\n","export const SETTINGS = 'settings';\nexport const STATISTIC = 'statistic';\nexport const TASK_LIST = 'task-list';\nexport const POMODOROS = 'pomodoros';\nexport const CATEGORIES = 'categories';\nexport const LOGIN = 'login';\nexport const RESOLVED_ROUTES = [\n  `/${SETTINGS}`,\n  `/${SETTINGS}/`,\n  `/${SETTINGS}/${POMODOROS}`,\n  `/${SETTINGS}/${CATEGORIES}`,\n];","import React, { useEffect } from 'react';\nimport uuid from 'uuid/v1';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport SettingsControl from './SettingsControl/SettingsControl';\nimport TimeLine from '../TimeLine/TimeLine';\nimport Button from '../UI/Button/Button';\nimport classes from './SettingsControls.module.scss';\nimport * as actions from '../../store/actions';\nimport Spinner from '../UI/Spinner/Spinner';\nimport { TASK_LIST } from '../../constants/Routes';\n\nconst SettingsControls = ({\n  settings,\n  loading,\n  history,\n  onInitSettings,\n  onSaveSettings,\n  onResetSettings,\n  onIncrement,\n  onDecrement,\n}) => {\n  useEffect(() => {\n    onInitSettings();\n    return () => onResetSettings();\n  }, [onInitSettings, onResetSettings]);\n  const redirectToTasks = () => history.push(`/${TASK_LIST}`);\n  const saveSettingsHandler = () => onSaveSettings(settings);\n  return (\n    !loading\n      ? (\n        <div>\n          <form className={classes.SettingsControlForm} action=\"/\">\n            {settings.map((control) => (\n              <SettingsControl\n                key={uuid()}\n                title={control.title}\n                name={control.name}\n                range={{ min: control.min, max: control.max }}\n                value={control.value}\n                text={control.text}\n                onIncrement={onIncrement}\n                onDecrement={onDecrement}\n              />\n            ))}\n          </form>\n          {settings.length > 0 ? <TimeLine state={settings} /> : null}\n          <div className={classes.ButtonWrapper}>\n            <Button clickHandler={redirectToTasks} color=\"Blue\">Go to Tasks</Button>\n            <Button clickHandler={saveSettingsHandler} color=\"Green\">Save</Button>\n          </div>\n        </div>\n      )\n      : <Spinner />\n  );\n};\n\nconst mapStateToProps = ({ settings }) => ({\n  settings: settings.settingsArr,\n  loading: settings.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onInitSettings: () => dispatch(actions.initSettings()),\n  onSaveSettings: (settings) => dispatch(actions.updateSettings(settings)),\n  onResetSettings: () => dispatch(actions.resetSettings()),\n  onIncrement: (name) => dispatch(actions.incrementSettings(name)),\n  onDecrement: (name) => dispatch(actions.decrementSettings(name)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)((withRouter(SettingsControls)));\n","import * as actionTypes from './actionTypes';\nimport axios from '../../axios';\n\nexport const setSettings = (settings) => ({\n  type: actionTypes.SET_SETTINGS,\n  settings,\n});\n\nexport const saveSettings = () => ({\n  type: actionTypes.SAVE_SETTINGS,\n});\n\nexport const initSettings = () => (dispatch) => {\n  axios.get('/settings.json')\n    .then((res) => dispatch(setSettings(res.data)))\n    .catch((err) => console.log(err));\n};\n\nexport const resetSettings = () => ({\n  type: actionTypes.RESET_SETTINGS,\n});\n\nexport const incrementSettings = (name) => ({\n  type: actionTypes.INCREMENT_SETTINGS,\n  name,\n});\n\nexport const updateSettings = (settings) => (dispatch) => {\n  dispatch({ type: actionTypes.START_SAVING_SETTINGS });\n  axios.put('/settings.json', settings)\n    .then(() => dispatch(saveSettings()))\n    .catch((err) => console.log(err));\n};\n\nexport const decrementSettings = (name) => ({\n  type: actionTypes.DECREMENT_SETTINGS,\n  name,\n});\n","import React from 'react';\n\nimport SubTitle from '../SubTItle/SubTitle';\nimport SettingsControls from '../SettingsControls/SettingsControls';\n\nexport default () => (\n  <>\n    <SubTitle subTitle=\"Pomodoros settings\" />\n    <SettingsControls />\n  </>\n);\n","import React from 'react';\n\nimport classes from './CategoriesList.module.scss';\n\nexport default ({ children }) => (\n  <li className={[classes.ListItem, classes[children]].join(' ')}>\n    <span>{children}</span>\n  </li>\n);\n","import React from 'react';\n\nimport CategoryItem from './CategoryItem';\nimport classes from './CategoriesList.module.scss';\n\nconst categories = [\n  'Work',\n  'Education',\n  'Hobby',\n  'Sport',\n  'Other',\n];\n\nexport default () => {\n  const categoryList = categories.map((category) => (\n    <CategoryItem key={category}>\n      {category}\n    </CategoryItem>\n  ));\n\n  return (\n    <ul className={classes.List}>\n      {categoryList}\n    </ul>\n  );\n};\n","import React from 'react';\n\nimport { withRouter } from 'react-router-dom';\nimport SubTitle from '../SubTItle/SubTitle';\nimport CategoriesList from './CategoryList/CategoriesList';\nimport Button from '../UI/Button/Button';\nimport classes from './CategoryList/CategoriesList.module.scss';\nimport { TASK_LIST } from '../../constants/Routes';\n\nexport default withRouter(({ history }) => {\n  const redirectToTasks = () => {\n    history.push(`/${TASK_LIST}`);\n  };\n  return (\n    <>\n      <SubTitle subTitle=\"Categories list overview\" />\n      <CategoriesList />\n      <div className={classes.ButtonWrapper}>\n        <Button\n          color=\"Blue\"\n          clickHandler={redirectToTasks}\n        >\n          Go to Tasks\n        </Button>\n      </div>\n    </>\n  );\n});\n","import React from 'react';\n\nimport {\n  Route,\n  Switch,\n  withRouter,\n  Redirect,\n} from 'react-router-dom';\nimport PomodorosSettings from '../components/SettingsPomodoros/SettingsPomodoros';\nimport CategoryList from '../components/SettingsCategories/Categories';\nimport { POMODOROS, CATEGORIES } from '../constants/Routes';\n\nexport default withRouter(({ match }) => (\n  <Switch>\n    <Route path={`${match.path}/${POMODOROS}`} exact component={PomodorosSettings} />\n    <Route path={`${match.path}/${CATEGORIES}`} exact component={CategoryList} />\n    <Redirect from={`${match.path}`} exact to={`${match.path}/${POMODOROS}`} component={PomodorosSettings} />\n  </Switch>\n));\n","class Auth {\n  constructor() {\n    this.authentificated = true;\n  }\n\n  login() {\n    this.authentificated = true;\n  }\n\n  logout() {\n    this.authentificated = false;\n  }\n\n  isAuthenticated() {\n    return this.authentificated;\n  }\n}\n\nexport default new Auth();\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport auth from '../../auth';\n\nexport default (props) => {\n  const isAuth = !auth.isAuthenticated()\n    ? (\n      <Link to=\"/login\" style={{ color: 'white' }}>\n        Login\n      </Link>\n    )\n    : null;\n  return (\n    <div>\n      <h1>Not Found</h1>\n      {isAuth}\n    </div>\n  )\n};\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { RESOLVED_ROUTES } from '../../constants/Routes';\nimport NotFound from '../../containers/NotFound/NotFound';\n\nexport default withRouter(({ location, children }) => {\n  const isResolved = RESOLVED_ROUTES.find((item) => item === location.pathname);\n  let Component = children;\n  if (!isResolved) {\n    Component = <NotFound />;\n  }\n  return Component;\n});\n","import React from 'react';\n\nimport PageHeading from '../../components/PageHeading/PageHeading';\nimport Tabs from '../../components/Tabs/Tabs';\nimport SettingsRouter from '../../router/SettingsRouter';\nimport {\n  POMODOROS,\n  CATEGORIES,\n} from '../../constants/Routes';\nimport classes from './Settings.module.scss';\nimport ResolveRoute from '../../hoc/ResolveRoutes/ResolveRoute';\n\nexport default () => (\n  <ResolveRoute>\n    <PageHeading title=\"Settings\" />\n    <div className={classes.Wrapper}>\n      <Tabs elements={[POMODOROS, CATEGORIES]} />\n      <SettingsRouter />\n    </div>\n  </ResolveRoute>\n);\n","import React from 'react';\n\nexport default (props) => (\n  <div>\n    Statistic\n  </div>\n);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport auth from '../auth';\n\nexport default ({ component: Component, ...rest }) => (\n  <Route {...rest}\n    render={(props) => (auth.authentificated\n      ? <Component {...props} />\n      : <Redirect to=\"/\" />)}\n  />\n);\n","import React from 'react';\nimport auth from '../../auth';\n\nexport default (props) => (\n  <div>\n    <h1>Login Page</h1>\n    <button onClick={() => {\n      auth.login();\n      props.history.push('/task-list');\n    }}\n    >\n      Login\n    </button>\n  </div>\n);\n","import React from 'react';\n\nimport { Route, Switch } from 'react-router-dom';\nimport TaskList from '../containers/TaskList/TaskList';\nimport Settings from '../containers/Settings/Settings';\nimport Statistic from '../containers/Statistic/Statistic';\nimport ProtectedRoute from './ProtectedRoute';\nimport Login from '../containers/Login/Login';\nimport NotFound from '../containers/NotFound/NotFound';\nimport {\n  TASK_LIST,\n  SETTINGS,\n  STATISTIC,\n  LOGIN,\n} from '../constants/Routes';\n\nexport default () => (\n  <Switch>\n    <ProtectedRoute path={`/${TASK_LIST}`} component={TaskList} />\n    <ProtectedRoute path={`/${SETTINGS}`} component={Settings} />\n    <ProtectedRoute path={`/${STATISTIC}`} component={Statistic} />\n    <Route path={`/${LOGIN}`} component={Login} />\n    <Route path=\"*\" component={NotFound} />\n  </Switch>\n);\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport Logo from '../../assets/images/Logo.svg';\nimport classes from './Logo.module.scss';\n\nexport default ({ shown }) => (\n  <Link className={shown ? classes.Logo : classes.LogoHidden} to=\"/task-list\">\n    <img src={Logo} alt=\"Logo\" />\n  </Link>\n);\n","import React from 'react';\n\nimport { NavLink, withRouter } from 'react-router-dom';\nimport classes from './NavigationItem.module.scss';\nimport { SETTINGS, POMODOROS } from '../../../../constants/Routes';\n\nexport default withRouter(({ title, location }) => {\n  const locationPath = location.pathname.split('/');\n  let path = title === SETTINGS ? `${title}/${POMODOROS}` : title;\n  if (title === SETTINGS && locationPath.length > 2) {\n    path = `${title}/${locationPath[locationPath.length - 1]}`;\n  }\n\n  return (\n    <li className={classes.NavigationItem}>\n      <NavLink to={`/${path}`} className={`${classes.NavigationLink}`} activeClassName={classes.Active}>\n        <span className={`icon-${title}`} />\n      </NavLink>\n    </li>\n  );\n});\n","import React from 'react';\n\nimport NavigationItem from './NavigationItem/NavigationItem';\nimport classes from './NavigationItems.module.scss';\nimport {\n  TASK_LIST,\n  SETTINGS,\n  STATISTIC,\n} from '../../../constants/Routes';\n\nexport default () => (\n  <ul className={classes.Menu}>\n    {[TASK_LIST, STATISTIC, SETTINGS].map((item) => <NavigationItem title={item} key={item} />)}\n  </ul>\n);\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PlusBtn from '../../AddTask/PlusBtn';\nimport * as action from '../../../store/actions';\nimport classes from './Button.module.scss';\n\nexport default (props) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={classes.TaskListButtons}>\n      {\n        props.fixed\n        && (\n          <li className={classes.TaskListItem}>\n            <PlusBtn showModal={() => dispatch(action.openTaskListModal())} />\n          </li>\n        )\n      }\n      <li className={classes.TaskListItem}>\n        <button className={`${classes.TaskListButton}`}>\n          <span className=\"icon-trash\" />\n        </button>\n      </li>\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Logo from '../../components/Logo/Logo';\nimport NavigationItems from '../../components/Navigation/NavigationItems/NavigationItems';\nimport HeaderButtons from '../../components/UI/Button/HeaderButtons';\nimport { TASK_LIST } from '../../constants/Routes';\nimport classes from './Header.module.scss';\n\nexport default withRouter(({ location }) => {\n  const { pathname } = location;\n  const isTaskList = pathname === `/${TASK_LIST}`;\n  const [isFixedHeader, fixedHeaderHandler] = useState(false);\n  const headerClasses = isFixedHeader ? [classes.Header, classes.Sticky] : [classes.Header];\n  const getScroll = () => {\n    const isScroll = window.pageYOffset > 50;\n    fixedHeaderHandler(isScroll);\n  };\n\n  useEffect(() => window.addEventListener('scroll', getScroll), []);\n\n  return (\n    <header className={headerClasses.join(' ')}>\n      <div className={classes.HeaderWrapper}>\n        <Logo shown={isFixedHeader} />\n        <div className={classes.Actions}>\n          {isTaskList && <HeaderButtons fixed={isFixedHeader} />}\n          <nav>\n            <NavigationItems />\n          </nav>\n        </div>\n      </div>\n    </header>\n  );\n});\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Router from '../../router/Router';\nimport Header from '../../containers/Header/Header';\nimport classes from './Layout.module.scss';\n\nexport default withRouter(() => (\n  <>\n    <Header />\n    <main className={classes.Layout}>\n      <Router />\n    </main>\n  </>\n));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  settingsArr: [],\n  loading: true,\n};\n\nconst settingControlsHandler = (state, action, dir) => {\n  const settingsItem = state.settingsArr.find((setting) => setting.name === action.name);\n  const {\n    value, min, max, step,\n  } = settingsItem;\n  if (dir === 'decr' && value > min) {\n    settingsItem.value -= step;\n  }\n  if (dir === 'incr' && value < max) {\n    settingsItem.value += step;\n  }\n  const newArr = [...state.settingsArr];\n  newArr[settingsItem] = settingsItem;\n  return { ...state, settingsArr: newArr };\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.RESET_SETTINGS:\n      return { ...state, settingsArr: [], loading: true };\n\n    case actionTypes.SET_SETTINGS:\n      return { ...state, settingsArr: action.settings, loading: false };\n\n    case actionTypes.INCREMENT_SETTINGS:\n      return settingControlsHandler(state, action, 'incr');\n\n    case actionTypes.DECREMENT_SETTINGS:\n      return settingControlsHandler(state, action, 'decr');\n\n    case actionTypes.START_SAVING_SETTINGS:\n      return { ...state, loading: true };\n\n    case actionTypes.SAVE_SETTINGS:\n      return { ...state, loading: false };\n\n    default:\n      return state;\n  }\n};\n","const getFormattedDate = (date) => {\n  const year = date.getFullYear();\n  const month = (1 + date.getMonth()).toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\nexport default (\n  title = '',\n  desc = '',\n  category = 'Work',\n  date = getFormattedDate(new Date()),\n  estimation = '1',\n  priority = 'Urgent',\n) => [\n  {\n    labelName: 'title',\n    placeholder: 'Add title here',\n    type: 'text',\n    value: title,\n  },\n  {\n    labelName: 'description',\n    placeholder: 'Add description here',\n    type: 'text',\n    value: desc,\n  },\n  {\n    labelName: 'category',\n    placeholder: null,\n    type: 'radio',\n    value: category,\n    checked: category,\n    controlsList: [\n      'Work',\n      'Education',\n      'Hobby',\n      'Sport',\n      'Other',\n    ],\n  },\n  {\n    labelName: 'deadline',\n    type: 'date',\n    value: date,\n  },\n  {\n    labelName: 'estimation',\n    type: 'radio',\n    value: estimation,\n    checked: estimation,\n    controlsList: ['1', '2', '3', '4', '5'],\n  },\n  {\n    labelName: 'priority',\n    type: 'radio',\n    value: priority,\n    checked: priority,\n    controlsList: ['Urgent', 'High', 'Middle', 'Low'],\n  },\n];\n","import { curry } from 'ramda';\n\nconst checkIsPropTruthy = curry((prop, item) => item[1][prop]);\nconst filter = curry((arr, fn) => arr.filter(fn));\nconst checkIsTaskDaily = (item) => !item[1].done && !item[1].isDaily;\n\nconst filterByLists = (list) => {\n  const filterBy = filter(list);\n  const daily = filterBy(checkIsPropTruthy('isDaily'));\n  const done = filterBy(checkIsPropTruthy('done'));\n  const global = filterBy(checkIsTaskDaily);\n\n  return { global, done, daily };\n};\n\n\nexport default (state, action) => {\n  const { tasks, isFirstTask } = action.payload;\n  const allTasks = Object.entries(tasks);\n  const { global, done, daily } = filterByLists(allTasks);\n\n  const taskListCopy = {\n    ...state.tasks,\n    globalList: global,\n    dailyList: daily,\n    done,\n  };\n\n  return { ...state, tasks: taskListCopy, isFirstTask };\n};\n","import taskForm from '../../constants/TaskFormOpts';\n\nexport default (state, data) => {\n  const {\n    title,\n    description,\n    category,\n    deadline,\n    priority,\n    estimation,\n    fireBaseId,\n  } = data;\n\n  const formData = taskForm(title, description, category, deadline, estimation, priority);\n\n  return {\n    ...state,\n    taskFormOpts: formData,\n    isModalOpen: true,\n    editableTask: fireBaseId,\n  };\n};\n","export default (state, action) => {\n  const { evt, id, prop } = action;\n  const { value } = evt.target;\n  const index = state.taskFormOpts.findIndex((item) => item.labelName === id);\n  const newState = [...state.taskFormOpts];\n\n  newState[index].value = value;\n\n  if (prop === 'checked') {\n    newState[index][prop] = value;\n  }\n\n  return { ...state, taskFormOpts: newState };\n};\n","import {\n  CLOSE_TASK_LIST_MODAL,\n  GET_TASKS,\n  CHANGE_TASK_LIST_MODAL,\n  OPEN_TASK_LIST_MODAL,\n  SKIP_GREETING,\n  SAVE_TASK,\n  START_SAVING_TASK,\n  START_INIT_TASKS,\n  EDIT_TASK,\n  UPDATE_TASK,\n  START_UPDATING_TASK,\n  START_DELETING_TASK,\n  DELETE_TASK,\n  START_MOVING_TO_DAILY,\n  MOVE_TO_DAILY,\n} from '../actions/actionTypes';\nimport checkFirstVisit from '../../helpers/checkFirstVisit';\nimport taskForm from '../../constants/TaskFormOpts';\nimport getTasks from '../utils/getTasks';\nimport setFields from '../utils/setFields';\nimport updateField from '../utils/updateField';\n\nconst initialState = {\n  tasks: {\n    globalList: null,\n    dailyList: null,\n    done: null,\n  },\n  isFirstVisit: checkFirstVisit(),\n  isFirstTask: null,\n  isModalOpen: false,\n  editableTask: null,\n  loading: false,\n  taskFormOpts: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TASKS:\n      return getTasks(state, action);\n\n    case SKIP_GREETING:\n      return { ...state, isFirstVisit: false };\n\n    case OPEN_TASK_LIST_MODAL:\n      return { ...state, taskFormOpts: taskForm(), isModalOpen: true };\n\n    case CLOSE_TASK_LIST_MODAL:\n      return { ...state, isModalOpen: false, editableTask: false };\n\n    case CHANGE_TASK_LIST_MODAL:\n      return updateField(state, action.payload);\n\n    case START_SAVING_TASK:\n      return { ...state, loading: true };\n\n    case SAVE_TASK:\n      return { ...state, loading: false, isModalOpen: false };\n\n    case UPDATE_TASK:\n      return {\n        ...state, loading: false, isModalOpen: false, editableTask: null,\n      };\n\n    case START_UPDATING_TASK:\n      return { ...state, loading: true };\n\n    case START_INIT_TASKS:\n      return { ...state, loading: true };\n\n    case EDIT_TASK:\n      return setFields(state, action.payload);\n\n    case START_DELETING_TASK:\n      return { ...state, loading: true };\n\n    case DELETE_TASK:\n      return {\n        ...state, loading: false, isModalOpen: false, editableTask: null,\n      };\n\n    case START_MOVING_TO_DAILY:\n      return { ...state, loading: true };\n\n    case MOVE_TO_DAILY:\n      return { ...state, loading: false };\n\n    default:\n      return state;\n  }\n};\n","export default () => {\n  const isFirstVisit = sessionStorage.getItem('firstVisit');\n  sessionStorage.setItem('firstVisit', 'true');\n  return !isFirstVisit;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport {\n  createStore,\n  combineReducers,\n  compose,\n  applyMiddleware,\n} from 'redux';\nimport './index.scss';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport settingsReducer from './store/reducers/settings';\nimport taskListReducer from './store/reducers/taskList';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  settings: settingsReducer,\n  taskList: taskListReducer,\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk),\n));\n\nReactDOM.render(\n <Provider store={store}>\n   <BrowserRouter>\n     <App />\n   </BrowserRouter>\n </Provider>,\n document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport Layout from './hoc/Layout/Layout';\n\nexport default () => (\n  <div className=\"App\">\n    <Layout />\n  </div>\n);\n"],"sourceRoot":""}