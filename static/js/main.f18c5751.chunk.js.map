{"version":3,"sources":["store/actions/actionTypes.js","components/Tasks/Task.module.scss","axios.js","store/actions/settings.js","store/actions/taskList.js","store/actions/timer.js","components/TaskForm/Form.module.scss","components/TimeLine/TimeLine.module.scss","components/UI/Bar/Bar.module.scss","components/UI/Button/Button.module.scss","components/UI/Button/Button.jsx","components/SettingsControls/SettingsControl/SettingsControl.module.scss","components/SettingsCategories/CategoryList/CategoriesList.module.scss","components/DeleteConfirmation/DeleteConfirmation.module.scss","containers/Header/Header.module.scss","components/Tabs/Tabs.module.scss","components/PageHeading/PageHeading.jsx","components/TaskListMessages/TaskListMessages.module.scss","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.scss","components/PageHeading/PageHeading.module.scss","components/UI/Modal/Modal.module.scss","containers/TaskList/TaskList.module.scss","components/SettingsControls/SettingsControls.module.scss","components/AddTask/PlusBtn.module.scss","assets/images/tomato_settings.svg","assets/images/tomato-first.svg","assets/images/tomato-add.svg","components/UI/Spinner/Spinner.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/SubTItle/SubTitle.module.scss","containers/Settings/Settings.module.scss","assets/images/Logo.svg","components/Logo/Logo.module.scss","components/Navigation/NavigationItems/NavigationItems.module.scss","hoc/Layout/Layout.module.scss","helpers/checkFirstVisit.js","components/AddTask/PlusBtn.jsx","constants/Texts.js","components/TaskListMessages/TaskListMessages.jsx","helpers/checkTaskState.js","components/UI/Spinner/Spinner.jsx","components/Tasks/Task/DateBlock.jsx","helpers/isOverdue.js","components/Tasks/Task/Task.jsx","helpers/getTaskListConstants.js","helpers/drawTask.js","helpers/createGlobalList.js","components/UI/Bar/FilterBar.jsx","constants/Filters.js","helpers/taskListUtils.js","components/UI/Bar/SelectBar.jsx","components/Tasks/Tasks.jsx","helpers/generateListConfigs.js","components/UI/Backdrop/Backdrop.jsx","components/UI/Modal/Modal.jsx","components/DeleteConfirmation/DeleteConfirmation.jsx","components/TaskForm/generateField.jsx","components/TaskForm/Field.jsx","components/TaskForm/Form.jsx","helpers/generateFormButtons.js","containers/TaskList/TaskList.jsx","components/Tabs/Tabs.jsx","components/SubTItle/SubTitle.jsx","components/SettingsControls/SettingsControl/SettingsControl.jsx","components/TimeLine/TimeLineSegment.jsx","components/TimeLine/TimeLineMark.jsx","helpers/convertNumToTime.js","components/TimeLine/TimeLine.jsx","helpers/getTimeLineData.js","constants/Routes.js","components/SettingsControls/SettingsControls.jsx","components/SettingsPomodoros/SettingsPomodoros.jsx","components/SettingsCategories/CategoryList/CategoryItem.jsx","components/SettingsCategories/CategoryList/CategoriesList.jsx","components/SettingsCategories/Categories.jsx","router/SettingsRouter.jsx","auth.js","containers/NotFound/NotFound.jsx","hoc/ResolveRoutes/ResolveRoute.jsx","containers/Settings/Settings.jsx","containers/Statistic/Statistic.jsx","router/ProtectedRoute.jsx","containers/Login/Login.jsx","router/Router.jsx","components/Logo/Logo.jsx","components/Navigation/NavigationItems/NavigationItem/NavigationItem.jsx","components/Navigation/NavigationItems/NavigationItems.jsx","components/UI/Button/HeaderButtons.jsx","containers/Header/Header.jsx","hoc/Layout/Layout.jsx","App.js","store/reducers/settings.js","constants/TaskFormOpts.js","store/utils/getTasks.js","store/utils/setFields.js","store/utils/updateField.js","helpers/handleTrashItems.js","store/reducers/taskList.js","store/utils/switchTurn.js","store/utils/convertSettings.js","store/reducers/timer.js","index.js"],"names":["SET_SETTINGS","HAS_FETCHED","INCREMENT_SETTINGS","DECREMENT_SETTINGS","RESET_SETTINGS","SKIP_GREETING","OPEN_TASK_LIST_MODAL","CLOSE_TASK_LIST_MODAL","CHANGE_TASK_LIST_MODAL","EDIT_TASK","ENABLE_DELETE_MODE","DISABLE_DELETE_MODE","MOVE_TO_TRASH","UPDATE_TRASH","SHOW_DELETE_CONFIRMATION","SAVE_TASK","IS_FETCHING","GET_TASKS","UPDATE_TASK","DELETE_TASK","MOVE_TO_DAILY","SAVE_SETTINGS","UPDATE_TRASH_ITEM","DECLINE_DELETING","INIT_TIMER","START_ITERATION","FINISH_ITERATION","COUNT_DOWN","module","exports","instance","axios","create","baseURL","initSettings","dispatch","get","then","res","settings","data","type","actionTypes","catch","err","console","log","resetSettings","incrementSettings","name","decrementSettings","updateSettings","put","declineDeleting","skipGreeting","enableDeleteMode","disableDeleteMode","moveToTrash","id","flags","payload","updateTrash","tasks","showDeleteConfirmation","initTaskList","isFirstTask","Object","keys","length","openTaskListModal","updateTrashItem","ids","isSelected","closeTaskListModal","changeTaskListModal","evt","prop","editTask","moveToDaily","dataToSave","isDaily","patch","saveTask","post","updateTask","deleteTask","idsPromises","map","delete","Promise","all","startIteration","val","finishIteration","countDown","initTimer","promisses","item","task","saveSettings","children","color","clickHandler","classNames","classes","Button","onClick","className","join","title","HeadingContainer","Title","isFirstVisit","showModal","messages","skip","redirect","str","properties","icon","listSettings","text","tomatoFirst","addTask","checkTaskState","IconWrapper","src","alt","Text","ButtonWrapper","Loader","months","deadline","dateNow","day","getDate","month","getMonth","dateClasses","Date","deadlineDate","nextDay","toLocaleDateString","getTime","isOverdue","push","Overdue","Month","Today","props","taskData","onEditTask","onUpdateTrashItem","onMoveToDaily","taskList","shouldBeDeleteItems","isDeleteMode","done","IS_DAILY_LIST","IS_DONE_LIST","IS_GLOBAL_LIST","getTaskListConstants","history","useHistory","includes","deleteMode","DeleteMode","defaulClasses","Task","Category","category","taskClasses","Done","RightSide","DeleteButton","Selected","DateBlock","TaskInfo","priority","description","TaskButtons","TaskButton","fireBaseId","disabled","Priority","TomatoIcon","Estimation","estimation","curry","obj","key","fn","el","categoryName","categoryList","CategoryList","Circle","marks","activeElement","handler","List","isActive","ListButton","Active","ListItem","STATUS_FILTERS","PRIORITY_FILTERS","getUniqueCategory","compose","uniq","distributeByLists","globalListFilter","isTaskEqualCategory","getCategoriesList","array","filter","generateConfig","values","list","filters","active","isShown","getIds","SelectionList","connect","action","useState","topListActiveFilter","globalListActiveFilter","filterOptions","setFilterOptions","isGlobalListShown","setGlobalListVisibility","listsConfig","filterOpts","globalList","dailyList","topList","global","generateListConfigs","getTask","drawTask","filterHandler","config","isGlobal","globalListIndicator","content","createGlobalList","Fragment","GlobalListToggle","ShowButton","ShowListIndicator","BarSection","SelectBar","FilterBar","onCLose","Backdrop","Container","Modal","elements","loading","useDispatch","declineDelete","Spinner","data-test","Message","Close","radio","labelName","checked","value","placeholder","onChangeTaskListModal","identifier","radioClasses","Label","CheckedTomato","input","RadioInput","onChange","RadioTitle","isEstimation","generateField","controlsList","additionalClass","EstimationBlock","radioWrapper","EstimationRadioWrapper","RadioWrapper","getValueFromField","onCloseTaskListModal","onSaveTask","onUpdateTask","taskObj","onDeleteTask","taskFormOpts","editableTask","buttons","isEdit","handlers","cancelHandler","saveHandler","deleteHandler","formButtons","uuid","unshift","reduce","nextObj","dataToSend","createData","completeDate","status","completedCount","failedPomodoros","modalContent","AddTaskTitle","field","ButtonsWrapper","Form","onInitTaskList","onSkipGreeting","onOpenTaskListModal","withRouter","useEffect","TaskListMessages","TaskList","AddTaskWrapper","PageHeading","PlusBtn","isModalOpen","isDeleteConfirmationShown","DeleteConfirmation","match","Tabs","elem","splitedPath","path","TabsItem","activeClassName","TabsLink","to","subTitle","SubTitle","range","onIncrement","onDecrement","settingsWord","min","max","Iteration","ShortBreak","LongBreak","Work","SettingsControl","htmlFor","ControlsWrapper","preventDefault","Input","readOnly","ControlDescription","segment","size","currentClass","WorkIteration","style","width","leftShift","markOpts","ShiftedMark","TimeLineMark","left","num","hours","Math","floor","minutes","time","state","work","iteration","short","long","arr","workWithShortBreaks","totalTime","unit","cycleTime","currentTime","timeIntervals","Array","_","topMarks","convertNumToTIme","opts","getTimeLineData","workProccess","index","returnedValue","TimeLineSegment","timeLineGraph","getMappedList","timeMark","topMarksContainer","markLines","Cycle","TimeLineWrapper","TopMarksWrapper","TimeLine","BottomMarksWrapper","SETTINGS","STATISTIC","TASK_LIST","RESOLVED_ROUTES","settingsArr","onInitSettings","actions","onSaveSettings","onResetSettings","SettingsControlForm","control","categories","CategoryItem","CategoriesList","exact","component","PomodorosSettings","from","this","authentificated","isAuth","auth","isAuthenticated","location","Component","find","pathname","NotFound","ResolveRoute","Wrapper","SettingsRouter","rest","render","login","Timer","lazy","ProtectedRoute","Settings","Statistic","fallback","Login","shown","Logo","activeClass","useSelector","locationPath","split","hasSubRoute","offDeleteMode","NavigationItem","NavigationLink","Menu","trashBtnClasses","TaskListButton","TaskListButtons","fixed","TaskListItem","TrashItem","counter","actionToExecute","deleteTaskHandler","TrashCounter","isTaskList","isFixedHeader","fixedHeaderHandler","headerClasses","Header","Sticky","getScroll","isScroll","window","pageYOffset","addEventListener","HeaderWrapper","Actions","HeaderButtons","NavigationItems","Layout","Router","initialState","settingControlsHandler","dir","settingsItem","setting","step","newArr","getFormattedDate","date","year","getFullYear","toString","padStart","desc","checkIsPropTruthy","checkIsTaskDaily","allTasks","entries","filterBy","daily","filterByLists","taskListCopy","formData","taskForm","target","findIndex","newState","shouldBeDeleteItemsCopy","updatedArray","sessionStorage","getItem","setItem","turn","acc","convertSettings","shortBreak","longBreak","nextTurn","mode","isCleaned","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","rootReducer","combineReducers","getTasks","updateField","setFields","handleTrashItems","timer","switchTurn","store","createStore","applyMiddleware","thunk","ReactDOM","App","document","getElementById"],"mappings":"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","file":"static/js/main.f18c5751.chunk.js","sourcesContent":["export const SET_SETTINGS = {\n  HAS_FETCHED: 'SET_SETTINGS_HAS_FETCHED',\n};\nexport const INCREMENT_SETTINGS = {\n  HAS_FETCHED: 'INCREMENT_SETTINGS_HAS_FETCHED',\n};\nexport const DECREMENT_SETTINGS = {\n  HAS_FETCHED: 'DECREMENT_SETTINGS_HAS_FETCHED',\n};\nexport const RESET_SETTINGS = {\n  HAS_FETCHED: 'RESET_SETTINGS_HAS_FETCHED',\n};\nexport const SKIP_GREETING = {\n  HAS_FETCHED: 'SKIP_GREETING_HAS_FETCHED',\n};\nexport const OPEN_TASK_LIST_MODAL = {\n  HAS_FETCHED: 'OPEN_TASK_LIST_MODAL_HAS_FETCHED',\n};\nexport const CLOSE_TASK_LIST_MODAL = {\n  HAS_FETCHED: 'CLOSE_TASK_LIST_MODAL_HAS_FETCHED',\n};\nexport const CHANGE_TASK_LIST_MODAL = {\n  HAS_FETCHED: 'CHANGE_TASK_LIST_MODAL_HAS_FETCHED',\n};\nexport const EDIT_TASK = {\n  HAS_FETCHED: 'EDIT_TASK_HAS_FETCHED',\n};\nexport const ENABLE_DELETE_MODE = {\n  HAS_FETCHED: 'ENABLE_DELETE_MODE_HAS_FETCHED',\n};\nexport const DISABLE_DELETE_MODE = {\n  HAS_FETCHED: 'DISABLE_DELETE_MODE_HAS_FETCHED',\n};\nexport const MOVE_TO_TRASH = {\n  HAS_FETCHED: 'MOVE_TO_TRASH_HAS_FETCHED',\n};\nexport const UPDATE_TRASH = {\n  HAS_FETCHED: 'UPDATE_TRASH_HAS_FETCHED',\n};\nexport const SHOW_DELETE_CONFIRMATION = {\n  HAS_FETCHED: 'SHOW_DELETE_CONFIRMATION_HAS_FETCHED',\n};\n\nexport const SAVE_TASK = {\n  IS_FETCHING: 'SAVE_TASK_IS_FETCHING',\n  HAS_FETCHED: 'SAVE_TASK_HAS_FETCHED',\n};\nexport const GET_TASKS = {\n  IS_FETCHING: 'GET_TASKS_IS_FETCHING',\n  HAS_FETCHED: 'GET_TASKS_HAS_FETCHED',\n};\nexport const UPDATE_TASK = {\n  IS_FETCHING: 'UPDATE_TASK_IS_FETCHING',\n  HAS_FETCHED: 'UPDATE_TASK_HAS_FETCHED',\n};\nexport const DELETE_TASK = {\n  IS_FETCHING: 'DELETE_TASK_IS_FETCHING',\n  HAS_FETCHED: 'DELETE_TASK_HAS_FETCHED',\n};\nexport const MOVE_TO_DAILY = {\n  IS_FETCHING: 'MOVE_TO_DAILY_IS_FETCHING',\n  HAS_FETCHED: 'MOVE_TO_DAILY_HAS_FETCHED',\n};\nexport const SAVE_SETTINGS = {\n  IS_FETCHING: 'SAVE_SETTINGS_IS_FETCHING',\n  HAS_FETCHED: 'SAVE_SETTINGS_HAS_FETCHED',\n};\nexport const UPDATE_TRASH_ITEM = {\n  HAS_FETCHED: 'UPDATE_TRASH_ITEM_HAS_FETCHED',\n};\nexport const DECLINE_DELETING = {\n  HAS_FETCHED: 'DECLINE_DELETING_HAS_FETCHED',\n};\n\nexport const INIT_TIMER = {\n  IS_FETCHING: 'INIT_TIMER_IS_FETCHING',\n  HAS_FETCHED: 'INIT_TIMER_HAS_FETCHED',\n};\n\nexport const START_ITERATION = {\n  HAS_FETCHED: 'START_ITERATION_HAS_FETCHED',\n};\n\nexport const FINISH_ITERATION = {\n  HAS_FETCHED: 'FINISH_ITERATION_HAS_FETCHED',\n};\n\nexport const COUNT_DOWN = {\n  HAS_FETCHED: 'COUNT_DOWN_HAS_FETCHED',\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CategoryList\":\"Task_CategoryList__3Yhah\",\"Education\":\"Task_Education__3nSc0\",\"Work\":\"Task_Work__HODFC\",\"Other\":\"Task_Other__215oW\",\"Sport\":\"Task_Sport__ZNCsV\",\"Hobby\":\"Task_Hobby__1vJIN\",\"Circle\":\"Task_Circle__3adse\",\"Title\":\"Task_Title__2bncP\",\"Task\":\"Task_Task__2w7Tt\",\"Category\":\"Task_Category__DxMPT\",\"DeleteMode\":\"Task_DeleteMode__3S7EA\",\"DeleteButton\":\"Task_DeleteButton__2Atqq\",\"RightSide\":\"Task_RightSide__1Hky4\",\"Date\":\"Task_Date__348yD\",\"Overdue\":\"Task_Overdue__351q2\",\"Today\":\"Task_Today__15ILM\",\"Month\":\"Task_Month__32IdJ\",\"Urgent\":\"Task_Urgent__HhCBF\",\"High\":\"Task_High__dWf06\",\"Middle\":\"Task_Middle__2_3jY\",\"Low\":\"Task_Low__BuL1t\",\"Done\":\"Task_Done__3xFzd\",\"Priority\":\"Task_Priority__h3LMG\",\"TaskInfo\":\"Task_TaskInfo__2rUE5\",\"Estimation\":\"Task_Estimation__1xbRK\",\"TomatoIcon\":\"Task_TomatoIcon__1mEYG\",\"TaskButtons\":\"Task_TaskButtons__3-K6Z\",\"TaskButton\":\"Task_TaskButton__31x8s\",\"BarSection\":\"Task_BarSection__2BeZb\",\"GlobalListToggle\":\"Task_GlobalListToggle__gwdYa\",\"ShowButton\":\"Task_ShowButton__3XjD8\",\"ShowListIndicator\":\"Task_ShowListIndicator__3H5T2\",\"Selected\":\"Task_Selected__2_KhP\"};","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://productivity-react.firebaseio.com/',\n});\n\nexport default instance;\n","import * as actionTypes from './actionTypes';\nimport axios from '../../axios';\n\nexport const setSettings = (settings) => ({\n  type: actionTypes.SET_SETTINGS.HAS_FETCHED,\n  settings,\n});\n\nexport const saveSettings = () => ({\n  type: actionTypes.SAVE_SETTINGS.HAS_FETCHED,\n});\n\nexport const initSettings = () => (dispatch) => {\n  axios.get('/settings.json')\n    .then((res) => dispatch(setSettings(res.data)))\n    .catch((err) => console.log(err));\n};\n\nexport const resetSettings = () => ({\n  type: actionTypes.RESET_SETTINGS.HAS_FETCHED,\n});\n\nexport const incrementSettings = (name) => ({\n  type: actionTypes.INCREMENT_SETTINGS.HAS_FETCHED,\n  name,\n});\n\nexport const decrementSettings = (name) => ({\n  type: actionTypes.DECREMENT_SETTINGS.HAS_FETCHED,\n  name,\n});\n\nexport const updateSettings = (settings) => (dispatch) => {\n  dispatch({ type: actionTypes.SAVE_SETTINGS.IS_FETCHING });\n  axios.put('/settings.json', settings)\n    .then(() => dispatch(saveSettings()))\n    .catch((err) => console.log(err));\n};\n","import * as actionTypes from './actionTypes';\nimport axios from '../../axios';\n\nexport const getTasks = (tasks) => ({\n  type: actionTypes.GET_TASKS.HAS_FETCHED,\n  payload: {\n    tasks,\n    isFirstTask: !Object.keys(tasks).length,\n  },\n});\n\nexport const declineDeleting = () => ({\n  type: actionTypes.DECLINE_DELETING.HAS_FETCHED,\n});\n\nexport const skipGreeting = () => ({\n  type: actionTypes.SKIP_GREETING.HAS_FETCHED,\n});\n\nexport const enableDeleteMode = () => ({\n  type: actionTypes.ENABLE_DELETE_MODE.HAS_FETCHED,\n});\n\nexport const disableDeleteMode = () => ({\n  type: actionTypes.DISABLE_DELETE_MODE.HAS_FETCHED,\n});\n\nexport const moveToTrash = (id, flags) => ({\n  type: actionTypes.MOVE_TO_TRASH.HAS_FETCHED,\n  payload: { id, flags },\n});\n\nexport const updateTrash = (tasks) => ({\n  type: actionTypes.UPDATE_TRASH.HAS_FETCHED,\n  payload: tasks,\n});\n\nexport const showDeleteConfirmation = () => ({\n  type: actionTypes.SHOW_DELETE_CONFIRMATION.HAS_FETCHED,\n});\n\nexport const initTaskList = () => (dispatch) => {\n  dispatch({ type: actionTypes.GET_TASKS.IS_FETCHING });\n  axios.get('tasks.json')\n    .then((res) => dispatch(getTasks(res.data || {})));\n};\n\nexport const openTaskListModal = () => ({\n  type: actionTypes.OPEN_TASK_LIST_MODAL.HAS_FETCHED,\n});\n\nexport const updateTrashItem = (ids, isSelected) => ({\n  type: actionTypes.UPDATE_TRASH_ITEM.HAS_FETCHED,\n  payload: { ids, isSelected },\n});\n\nexport const closeTaskListModal = () => ({\n  type: actionTypes.CLOSE_TASK_LIST_MODAL.HAS_FETCHED,\n});\n\nexport const changeTaskListModal = (evt, id, prop) => ({\n  type: actionTypes.CHANGE_TASK_LIST_MODAL.HAS_FETCHED,\n  payload: { evt, id, prop },\n});\n\nexport const editTask = (data) => ({\n  type: actionTypes.EDIT_TASK.HAS_FETCHED,\n  payload: data,\n});\n\nexport const moveToDaily = (id, data) => (dispatch) => {\n  dispatch({ type: actionTypes.MOVE_TO_DAILY.IS_FETCHING });\n\n  const dataToSave = { ...data, isDaily: true };\n\n  axios.patch(`tasks/${id}.json`, dataToSave)\n    .then(() => {\n      dispatch({ type: actionTypes.MOVE_TO_DAILY.HAS_FETCHED });\n      dispatch(initTaskList());\n    });\n};\n\nexport const saveTask = (data) => (dispatch) => {\n  dispatch({ type: actionTypes.SAVE_TASK.IS_FETCHING });\n  axios.post('tasks.json', data)\n    .then(() => {\n      dispatch({ type: actionTypes.SAVE_TASK.HAS_FETCHED });\n      dispatch(initTaskList());\n    });\n};\n\nexport const updateTask = ({ data, id }) => (dispatch) => {\n  dispatch({ type: actionTypes.UPDATE_TASK.IS_FETCHING });\n  axios.put(`tasks/${id}.json`, data)\n    .then(() => {\n      dispatch({ type: actionTypes.UPDATE_TASK.HAS_FETCHED });\n      dispatch(initTaskList());\n    });\n};\n\nexport const deleteTask = (...ids) => (dispatch) => {\n  dispatch({ type: actionTypes.DELETE_TASK.IS_FETCHING });\n  const idsPromises = ids.map((id) => axios.delete(`tasks/${id}.json`));\n  Promise.all(idsPromises)\n    .then(() => {\n      dispatch({ type: actionTypes.DELETE_TASK.HAS_FETCHED });\n      dispatch(initTaskList());\n    })\n    .catch((err) => console.log(err));\n};\n","import * as actionTypes from './actionTypes';\nimport axios from '../../axios';\n\nexport const saveSettings = (res) => {\n  const [settings, task] = res;\n  return {\n    type: actionTypes.INIT_TIMER.HAS_FETCHED,\n    payload: {\n      settings: settings.data,\n      task: task.data,\n    },\n  };\n};\n\nexport const startIteration = (val) => ({\n  type: actionTypes.START_ITERATION.HAS_FETCHED,\n  payload: val,\n});\n\nexport const finishIteration = () => ({\n  type: actionTypes.FINISH_ITERATION.HAS_FETCHED,\n});\n\nexport const countDown = () => ({\n  type: actionTypes.COUNT_DOWN.HAS_FETCHED,\n});\n\nexport const initTimer = (id) => (dispatch) => {\n  dispatch({ type: actionTypes.INIT_TIMER.IS_FETCHING });\n  const promisses = (['settings.json', `tasks/${id}.json`]).map((item) => axios.get(item));\n\n  Promise.all(promisses)\n    .then((res) => dispatch(saveSettings(res)));\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Form_Form__48job\",\"ButtonsWrapper\":\"Form_ButtonsWrapper__gu0Sk\",\"Button\":\"Form_Button__1uuJq\",\"DeleteButton\":\"Form_DeleteButton__31tyO\",\"RadioTitle\":\"Form_RadioTitle__3QWiG\",\"AddTaskTitle\":\"Form_AddTaskTitle__27cya\",\"Label\":\"Form_Label__rXWln\",\"RadioWrapper\":\"Form_RadioWrapper__2J-5E\",\"Selected\":\"Form_Selected__1NpiB\",\"RadioInput\":\"Form_RadioInput__2Xax5\",\"Work\":\"Form_Work__2nun0\",\"Education\":\"Form_Education__OVn6P\",\"Hobby\":\"Form_Hobby__VSigU\",\"Sport\":\"Form_Sport__2SfvF\",\"Other\":\"Form_Other__18VVA\",\"Urgent\":\"Form_Urgent__2T7DX\",\"High\":\"Form_High__3BTPk\",\"Middle\":\"Form_Middle__lC7FT\",\"Low\":\"Form_Low__MSZ8D\",\"EstimationBlock\":\"Form_EstimationBlock__3NMmz\",\"EstimationRadioWrapper\":\"Form_EstimationRadioWrapper__9qt5y\",\"CheckedTomato\":\"Form_CheckedTomato__1lY6I\",\"Category\":\"Form_Category__2zXz4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cycle\":\"TimeLine_Cycle__183H5\",\"TimeLineWrapper\":\"TimeLine_TimeLineWrapper__3rwQG\",\"TimeLine\":\"TimeLine_TimeLine__1v-ae\",\"TimeLineMark\":\"TimeLine_TimeLineMark__3Lkme\",\"ShiftedMark\":\"TimeLine_ShiftedMark__3yCgQ\",\"MarkWrapper\":\"TimeLine_MarkWrapper__2Qt1d\",\"TopMarksWrapper\":\"TimeLine_TopMarksWrapper__2hyN9\",\"BottomMarksWrapper\":\"TimeLine_BottomMarksWrapper__2iEIp\",\"Start\":\"TimeLine_Start__38h1q\",\"End\":\"TimeLine_End__3XWKm\",\"WorkIteration\":\"TimeLine_WorkIteration__3-KWl\",\"ShortBreak\":\"TimeLine_ShortBreak__2a9qX\",\"LongBreak\":\"TimeLine_LongBreak__TzQag\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"Bar_List__5gFR9\",\"SelectionList\":\"Bar_SelectionList__mr70j\",\"ListItem\":\"Bar_ListItem__jU_yi\",\"ListButton\":\"Bar_ListButton__3xxHc\",\"Active\":\"Bar_Active___FeBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Ajf-\",\"Green\":\"Button_Green__3-UVv\",\"Blue\":\"Button_Blue__Mgv3_\",\"Remove\":\"Button_Remove__36B1W\",\"TaskListButtons\":\"Button_TaskListButtons__21XoU\",\"TaskListItem\":\"Button_TaskListItem__2AWIV\",\"TrashItem\":\"Button_TrashItem__1LkSp\",\"TrashCounter\":\"Button_TrashCounter__TT8r3\",\"TaskListButton\":\"Button_TaskListButton__3a4KU\",\"Active\":\"Button_Active__2GEwZ\"};","import React from 'react';\n\nimport classes from './Button.module.scss';\n\nexport default ({children, color, clickHandler}) => {\n  const classNames = [classes.Button, classes[color]];\n  return (\n    <button onClick={clickHandler} className={classNames.join(' ')}>\n      {children}\n    </button>\n  );\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SettingsControl\":\"SettingsControl_SettingsControl__3xTEQ\",\"Label\":\"SettingsControl_Label__2ctyB\",\"Work\":\"SettingsControl_Work__189-8\",\"Iteration\":\"SettingsControl_Iteration__3W35h\",\"ShortBreak\":\"SettingsControl_ShortBreak__SWeil\",\"LongBreak\":\"SettingsControl_LongBreak__3VuL0\",\"ControlsWrapper\":\"SettingsControl_ControlsWrapper__1tX4Z\",\"ControlDescription\":\"SettingsControl_ControlDescription__3x5eZ\",\"Input\":\"SettingsControl_Input__1FNIQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"CategoriesList_List__1qgiK\",\"ButtonWrapper\":\"CategoriesList_ButtonWrapper__1OlI9\",\"ListItem\":\"CategoriesList_ListItem__2KRM-\",\"Work\":\"CategoriesList_Work__BwyrD\",\"Education\":\"CategoriesList_Education__3vFcm\",\"Hobby\":\"CategoriesList_Hobby__AHrpm\",\"Sport\":\"CategoriesList_Sport__1ACo5\",\"Other\":\"CategoriesList_Other__318kp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"DeleteConfirmation_Container__xHdIL\",\"Title\":\"DeleteConfirmation_Title__sFpA2\",\"Message\":\"DeleteConfirmation_Message__2wVul\",\"ButtonWrapper\":\"DeleteConfirmation_ButtonWrapper__3voX7\",\"Close\":\"DeleteConfirmation_Close__4kABV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__HQIlZ\",\"Sticky\":\"Header_Sticky__1W9vY\",\"HeaderWrapper\":\"Header_HeaderWrapper__2SROQ\",\"Actions\":\"Header_Actions__33XpN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tabs\":\"Tabs_Tabs__16Mtf\",\"TabsItem\":\"Tabs_TabsItem__3tFY5\",\"TabsLink\":\"Tabs_TabsLink__1iXv4\",\"Active\":\"Tabs_Active__2yZyb\"};","import React from 'react';\nimport classes from './PageHeading.module.scss';\n\nexport default ({ title }) => (\n  <section className={classes.HeadingContainer}>\n    <h2 className={classes.Title}>{title}</h2>\n  </section>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IconWrapper\":\"TaskListMessages_IconWrapper__HnwQ_\",\"Text\":\"TaskListMessages_Text__1GDDX\",\"ButtonWrapper\":\"TaskListMessages_ButtonWrapper__2OUg6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1eVc8\",\"NavigationLink\":\"NavigationItem_NavigationLink__20mbT\",\"Active\":\"NavigationItem_Active__2wNbt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HeadingContainer\":\"PageHeading_HeadingContainer__1OAte\",\"Title\":\"PageHeading_Title__2nDtj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Modal_Container__1bc4A\",\"Modal\":\"Modal_Modal__31OI7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"TaskList_TaskList__3IHKv\",\"AddTaskWrapper\":\"TaskList_AddTaskWrapper__2XaY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SettingsControlForm\":\"SettingsControls_SettingsControlForm__3GwIp\",\"ButtonWrapper\":\"SettingsControls_ButtonWrapper__2w0wm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"PlusBtn_Button__2Nbd8\"};","module.exports = __webpack_public_path__ + \"static/media/tomato_settings.07c3fe0a.svg\";","module.exports = __webpack_public_path__ + \"static/media/tomato-first.a871b035.svg\";","module.exports = __webpack_public_path__ + \"static/media/tomato-add.40ce5e7a.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1Vve3\",\"load2\":\"Spinner_load2__MgRZO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__Vem4f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SubTitle\":\"SubTitle_SubTitle__1p3FR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Settings_Wrapper__tdKXN\"};","module.exports = __webpack_public_path__ + \"static/media/Logo.73bf16d2.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__d04QA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"NavigationItems_Menu__3_JHW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__ACkHP\"};","export default (isFirstVisit) => {\n  if (!isFirstVisit) {\n    sessionStorage.setItem('firstVisit', 'true');\n  }\n  return !isFirstVisit;\n};\n","import React from 'react';\nimport classes from './PlusBtn.module.scss';\n\nexport default ({ showModal }) => (\n  <button onClick={showModal} className={classes.Button}>\n    <span className=\"icon-add\" />\n  </button>\n);\n","export const messages = {\n  firstVisit: 'As you visited our site for a first time you can check and customize your default application settings',\n  firstTask: 'Add your first task',\n  noTasks: 'You don’t have any tasks left. Add new tasks to stay productive.',\n};\n","import React from 'react';\nimport classes from './TaskListMessages.module.scss';\nimport Button from '../UI/Button/Button';\nimport checkTaskState from '../../helpers/checkTaskState';\n\nexport default ({\n  skip,\n  redirect,\n  str,\n  isFirstVisit,\n}) => {\n  const properties = checkTaskState(str);\n  return (\n    <>\n      <div className={classes.IconWrapper}>\n        <img src={properties.icon} alt=\"Tomato\" />\n      </div>\n      <h2 className={classes.Text}>\n        {properties.text}\n      </h2>\n      {isFirstVisit\n        ? (\n          <div className={classes.ButtonWrapper}>\n            <Button clickHandler={skip} color=\"Blue\">Skip</Button>\n            <Button clickHandler={redirect} color=\"Green\">Go to Settings</Button>\n          </div>\n        )\n        : null}\n    </>\n  );\n};\n","import { messages } from '../constants/Texts';\nimport listSettings from '../assets/images/tomato_settings.svg';\nimport tomatoFirst from '../assets/images/tomato-first.svg';\nimport addTask from '../assets/images/tomato-add.svg';\n\nexport default (str) => {\n  const properties = { icon: listSettings, text: messages.firstVisit };\n  switch (str) {\n    case 'firstVisit':\n      return properties;\n\n    case 'firstTask':\n      properties.icon = tomatoFirst;\n      properties.text = messages.firstTask;\n      return properties;\n\n    default:\n      properties.icon = addTask;\n      properties.text = messages.noTasks;\n      return properties;\n  }\n};\n","import React from 'react';\n\nimport classes from './Spinner.module.scss';\n\nexport default () => (\n  <div className={classes.Loader}>Loading...</div>\n);\n","import React from 'react';\nimport classes from '../Task.module.scss';\nimport isOverdue from '../../../helpers/isOverdue';\n\nconst months = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nexport default ({ isDaily, deadline, dateNow }) => {\n  const day = deadline.getDate();\n  const month = months[deadline.getMonth()];\n  const dateClasses = [classes.Date];\n\n  if (isOverdue(dateNow, deadline)) {\n    dateClasses.push(classes.Overdue);\n  }\n\n  return (\n    <p className={dateClasses.join(' ')}>\n      {\n        isDaily\n          ? (\n            <>\n              <span>{day}</span>\n              <span className={classes.Month}>{month}</span>\n            </>\n          )\n          : <span className={classes.Today}>today</span>\n      }\n    </p>\n  );\n};\n","export default (dateNow, deadlineDate) => {\n  const nextDay = new Date(dateNow.toLocaleDateString('en-US'));\n\n  return deadlineDate.getTime() < nextDay.getTime();\n};\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport getTaskListConstants from '../../../helpers/getTaskListConstants';\nimport classes from '../Task.module.scss';\nimport DateBlock from './DateBlock';\n\nexport default (props) => {\n  const { id, taskData, onEditTask, onUpdateTrashItem, onMoveToDaily, taskList } = props;\n  const { shouldBeDeleteItems, isDeleteMode} = taskList;\n  const { IS_DAILY_LIST, IS_DONE_LIST, IS_GLOBAL_LIST } = getTaskListConstants(taskData);\n  const history = useHistory();\n  const isSelected = shouldBeDeleteItems.includes(id);\n  const deleteMode = isDeleteMode ? classes.DeleteMode : '';\n  const defaulClasses = [classes.Task, classes.Category, classes[taskData.category], deleteMode];\n  const taskClasses = IS_DONE_LIST\n    ? [...defaulClasses, classes.Done]\n    : defaulClasses;\n\n  return (\n    <div className={taskClasses.join(' ')}>\n      <div className={classes.RightSide}>\n        {isDeleteMode\n          ? <button\n            className={`${classes.DeleteButton} ${isSelected ? classes.Selected : ''} icon-trash`}\n            onClick={() => onUpdateTrashItem([id], isSelected)}\n          />\n          : <DateBlock\n            isDaily={!IS_DAILY_LIST}\n            deadline={new Date(taskData.deadline)}\n            dateNow={new Date()}\n          />}\n      </div>\n      <p className={classes.TaskInfo}>\n        <span className={classes[taskData.priority]}>{taskData.title}</span>\n        <span>{taskData.description}</span>\n      </p>\n      <p className={classes.TaskButtons}>\n        {\n          IS_GLOBAL_LIST\n          && <button\n            className={`${classes.TaskButton} icon-arrows-up`}\n            onClick={() => onMoveToDaily(id, taskData)}\n          />\n        }\n        {\n          !IS_DONE_LIST\n          && <button\n            className={`${classes.TaskButton} icon-edit`}\n            onClick={() => onEditTask({ ...taskData, fireBaseId: { id, taskData } })}\n          />\n        }\n      </p>\n      <button\n        disabled={IS_DONE_LIST}\n        className={`${classes.Priority} ${classes[taskData.priority]}`}\n        onClick={() => {\n          history.push(`/timer/${id}`);\n        }}\n      >\n        <span className={`${classes.TomatoIcon} icon-tomato`}/>\n        <span className={classes.Estimation}>{taskData.estimation}</span>\n      </button>\n    </div>\n  );\n};\n","export default (task) => {\n  const { isDaily, done } = task;\n\n  return {\n    IS_DAILY_LIST: isDaily,\n    IS_DONE_LIST: done,\n    IS_GLOBAL_LIST: !isDaily && !done,\n  };\n};\n","import React from 'react';\nimport { curry } from 'ramda';\nimport Task from '../components/Tasks/Task/Task';\n\nexport default curry((props, task) => {\n  const [fireBaseId, obj] = task;\n\n  return (\n    <Task\n      key={fireBaseId}\n      id={fireBaseId}\n      taskData={obj}\n      {...props}\n    />\n  );\n});\n","import React from 'react';\nimport { curry } from 'ramda';\nimport classes from '../components/Tasks/Task.module.scss';\n\nexport default curry((fn, el) => {\n  const { categoryName, data } = el;\n  let categoryList = null;\n\n  if (data.length) {\n    categoryList = (\n      <div\n        className={`${classes.CategoryList} ${classes[categoryName]}`}\n        key={categoryName}\n      >\n        <span className={`${classes.Circle} ${classes[categoryName]}`} />\n        <h3 className={`${classes.Title} ${classes[categoryName]}`}>{categoryName}</h3>\n        {fn(data)}\n      </div>\n    );\n  }\n\n  return categoryList;\n});\n","import React from 'react';\nimport classes from './Bar.module.scss';\n\nexport default ({ marks, activeElement, handler }) => (\n  <ul className={classes.List}>\n    {marks.map(item => {\n      const isActive = item === activeElement\n        ? `${classes.ListButton} ${classes.Active}`\n        : classes.ListButton;\n\n      return (\n        <li\n          className={classes.ListItem}\n          key={item}\n        >\n          <button\n            className={isActive}\n            onClick={() => handler(item)}\n          >\n            {item}\n          </button>\n        </li>\n      );\n    })}\n  </ul>\n);\n","export const STATUS_FILTERS = ['toDo', 'done'];\n\nexport const PRIORITY_FILTERS = ['All', 'Urgent', 'High', 'Middle', 'Low'];\n\nexport const DEFAULT_STATUS_FILTER = 'toDo';\n\nexport const DEFAULT_PRIORITY_FILTER = 'All';\n","import { compose, curry, filter, map, uniq } from 'ramda';\nimport { DEFAULT_PRIORITY_FILTER } from '../constants/Filters';\n\nexport const getUniqueCategory = compose(uniq, map((el) => el[1].category));\n\nexport const distributeByLists = curry((globalListFilter, category, el) => {\n  const [, task] = el;\n  const isTaskEqualCategory = task.category === category;\n\n  return globalListFilter === DEFAULT_PRIORITY_FILTER\n    ? isTaskEqualCategory\n    : isTaskEqualCategory && task.priority === globalListFilter;\n});\n\nexport const getCategoriesList = curry((array, globalListFilter, category) => {\n  const getGlobalList = filter(distributeByLists(globalListFilter, category), array);\n\n  return { categoryName: category, data: getGlobalList };\n});\n\nexport const generateConfig = (...values) => {\n  const [name, list, filters, active, isShown] = values;\n\n  return {\n    name,\n    list,\n    filters,\n    active,\n    isShown,\n  };\n};\n","import React from 'react';\nimport classes from './Bar.module.scss';\n\nexport default ({ list, onUpdateTrashItem }) => {\n  const getIds = list.map(item => item[0]);\n\n  return (\n    <ul className={`${classes.List} ${classes.SelectionList}`}>\n      <li className={classes.ListItem}>\n        <button\n          className={classes.ListButton}\n          onClick={() => onUpdateTrashItem(getIds, false)}\n        >\n          Select All\n        </button>\n      </li>\n      <li className={classes.ListItem}>\n        <button\n          className={classes.ListButton}\n          onClick={() => onUpdateTrashItem(getIds, true)}\n        >\n          Deselect All\n        </button>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { curry, map } from 'ramda';\nimport drawTask from '../../helpers/drawTask';\nimport createGlobalList from '../../helpers/createGlobalList';\nimport FilterBar from '../UI/Bar/FilterBar';\nimport generateListConfigs from '../../helpers/generateListConfigs';\nimport * as action from '../../store/actions';\nimport { DEFAULT_STATUS_FILTER, DEFAULT_PRIORITY_FILTER } from '../../constants/Filters';\nimport classes from './Task.module.scss';\nimport SelectBar from '../UI/Bar/SelectBar';\n\nconst Tasks = (props) => {\n  const { taskList } = props;\n  const [filterOptions, setFilterOptions] = useState(\n    { topListActiveFilter: DEFAULT_STATUS_FILTER, globalListActiveFilter: DEFAULT_PRIORITY_FILTER },\n  );\n  const [isGlobalListShown, setGlobalListVisibility] = useState(false);\n  const listsConfig = generateListConfigs(taskList.tasks, filterOptions, isGlobalListShown);\n  const getTask = map(drawTask({ ...props }));\n\n  const filterHandler = curry((name, val) => {\n    if (name === 'global') {\n      setFilterOptions({ ...filterOptions, globalListActiveFilter: val });\n    } else {\n      setFilterOptions({ ...filterOptions, topListActiveFilter: val });\n    }\n  });\n\n  return (\n    <>\n      {listsConfig.map((config) => {\n        const {\n          name, list, filters, active, isShown,\n        } = config;\n        const isGlobal = name === 'global';\n        const globalListIndicator = isShown\n          ? 'icon-global-list-arrow-down'\n          : 'icon-global-list-arrow-right';\n\n        const content = isGlobal\n          ? map(createGlobalList(getTask), list)\n          : getTask(list);\n\n        return (\n          <React.Fragment key={name}>\n            {\n              isGlobal\n              && (\n                <div className={classes.GlobalListToggle}>\n                  <button\n                    className={classes.ShowButton}\n                    onClick={() => setGlobalListVisibility(!isGlobalListShown)}\n                  >\n                    <span>Global List</span>\n                    <span className={`${classes.ShowListIndicator} ${globalListIndicator}`} />\n                  </button>\n                </div>\n              )\n            }\n            {\n              isShown\n              && (\n                <div>\n                  <div className={classes.BarSection}>\n                    {taskList.isDeleteMode\n                    && <SelectBar\n                      list={isGlobal\n                        ? taskList.tasks.globalList\n                        : list}\n                      onUpdateTrashItem={props.onUpdateTrashItem}\n                    />}\n                    <FilterBar\n                      handler={filterHandler(name)}\n                      marks={filters}\n                      activeElement={active}\n                    />\n                  </div>\n                  {content}\n                </div>\n              )\n            }\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n};\n\nconst mapStateToProps = ({ taskList }) => ({\n  taskList,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onEditTask: (data) => dispatch(action.editTask(data)),\n  onMoveToDaily: (id, data) => dispatch(action.moveToDaily(id, data)),\n  onUpdateTrashItem: (id, isSelected) => dispatch(action.updateTrashItem(id, isSelected)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tasks);\n","import { map, compose } from 'ramda';\nimport { STATUS_FILTERS, PRIORITY_FILTERS, DEFAULT_STATUS_FILTER } from '../constants/Filters';\nimport { getUniqueCategory, getCategoriesList, generateConfig } from './taskListUtils';\n\nexport default (tasks, filterOpts, isGlobalListShown) => {\n  const { topListActiveFilter, globalListActiveFilter } = filterOpts;\n  const { globalList, dailyList, done } = tasks;\n\n  const topList = topListActiveFilter === DEFAULT_STATUS_FILTER\n    ? dailyList\n    : done;\n  const global = compose(\n    map(getCategoriesList(globalList, globalListActiveFilter)),\n    getUniqueCategory,\n  )(globalList);\n\n  return [\n    generateConfig('top', topList, STATUS_FILTERS, topListActiveFilter, true),\n    generateConfig('global', global, PRIORITY_FILTERS, globalListActiveFilter, isGlobalListShown),\n  ];\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classes from './Backdrop.module.scss';\nimport * as action from '../../../store/actions';\n\nconst Backdrop = ({ onCLose }) => (\n    <div\n      className={classes.Backdrop}\n      onClick={onCLose}\n    />\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n  onCLose: () => dispatch(action.closeTaskListModal()),\n});\n\nexport default connect(null, mapDispatchToProps)(Backdrop);\n","import React from 'react';\nimport Backdrop from '../Backdrop/Backdrop';\nimport classes from './Modal.module.scss';\n\nexport default ({ children }) => (\n  <div className={classes.Container}>\n    <Backdrop />\n    <div className={classes.Modal}>\n      {children}\n    </div>\n  </div>\n);\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Spinner from '../UI/Spinner/Spinner';\nimport Button from '../UI/Button/Button';\nimport * as action from '../../store/actions/index';\nimport classes from './DeleteConfirmation.module.scss';\n\nexport default ({ elements, loading }) => {\n  const dispatch = useDispatch();\n  const declineDelete = () => dispatch(action.declineDeleting());\n  const removeTasks = () => dispatch(action.deleteTask(...elements));\n\n  return (\n    <div className={classes.Container}>\n      {\n        loading\n          ? <Spinner />\n          : (\n            <>\n              <h2\n                className={classes.Title}\n                data-test=\"Title\"\n              >\n                Remove Task\n              </h2>\n              <p\n                className={classes.Message}\n                data-test=\"Message\"\n              >\n                Are you sure you want to remove selected task(s)?\n              </p>\n             <div className={classes.ButtonWrapper}>\n               <Button\n                 color=\"Blue\"\n                 clickHandler={declineDelete}\n               >\n                 Cancel\n               </Button>\n               <Button\n                 color=\"Remove\"\n                 clickHandler={removeTasks}\n               >\n                 Remove\n               </Button>\n             </div>\n              <button\n                onClick={declineDelete}\n                className={`${classes.Close} icon-close`}\n                data-test=\"Close button\"\n              />\n            </>\n          )\n      }\n    </div>\n  );\n};\n","import React from 'react';\nimport classes from './Form.module.scss';\n\nexport default ({\n  type,\n  radio,\n  labelName,\n  checked,\n  value,\n  placeholder,\n  onChangeTaskListModal,\n}) => {\n  const identifier = (type === 'radio')\n    ? radio\n    : labelName;\n  const radioClasses = (labelName === 'estimation' && radio === checked)\n    ? [classes.Label, classes.CheckedTomato]\n    : [classes.Label];\n  const input = type === 'radio'\n    ? (\n      <>\n        <input\n          className={classes.RadioInput}\n          onChange={(evt) => onChangeTaskListModal(evt, labelName, 'checked')}\n          type={type}\n          value={identifier}\n          checked={radio === checked}\n        />\n        <span className={classes[identifier]} />\n      </>\n    )\n    : (\n      <input\n        onChange={(evt) => onChangeTaskListModal(evt, labelName, 'value')}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n      />\n    );\n\n  if (radio === checked) {\n    radioClasses.push(classes.Selected);\n  }\n\n  return (\n    <label className={radioClasses.join(' ')} key={identifier}>\n      <h4 className={classes.RadioTitle}>{labelName !== 'estimation' && identifier}</h4>\n      {input}\n    </label>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classes from './Form.module.scss';\nimport * as action from '../../store/actions';\nimport generateField from './generateField';\n\nconst Field = (props) => {\n  const isEstimation = props.labelName === 'estimation';\n  let content = generateField(props);\n\n  if (props.controlsList) {\n    const additionalClass = isEstimation\n      ? classes.EstimationBlock\n      : null;\n    const radioWrapper = isEstimation\n      ? classes.EstimationRadioWrapper\n      : classes.RadioWrapper;\n\n    content = (\n      <div className={[additionalClass, classes.Category].join(' ')}>\n        <h4 className={classes.RadioTitle}>{props.labelName}</h4>\n        <div className={radioWrapper}>\n          {props.controlsList.map((radio) => generateField({ ...props, radio }))}\n        </div>\n      </div>\n    );\n  }\n  return content;\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChangeTaskListModal: (evt, id, prop) => dispatch(action.changeTaskListModal(evt, id, prop)),\n});\n\nexport default connect(null, mapDispatchToProps)(Field);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport uuid from 'uuid/v1';\nimport * as action from '../../store/actions';\nimport classes from './Form.module.scss';\nimport Spinner from '../UI/Spinner/Spinner';\nimport formButtons from '../../helpers/generateFormButtons';\nimport TaskFormField from './Field';\n\nconst getValueFromField = (data) => {\n  const { labelName, value } = data;\n\n  return { [labelName]: value };\n};\n\nconst Form = ({\n  taskList,\n  onCloseTaskListModal,\n  onSaveTask,\n  onUpdateTask,\n  onDeleteTask,\n}) => {\n  const { taskFormOpts, editableTask } = taskList;\n  const cancelHandler = () => {\n    onCloseTaskListModal();\n  };\n\n  const saveHandler = () => {\n    const data = taskFormOpts.map(getValueFromField);\n    const taskData = data.reduce((obj, nextObj) => ({ ...obj, ...nextObj }));\n    const dataToSend = {\n      id: uuid(),\n      createData: new Date(),\n      completeDate: null,\n      status: null,\n      completedCount: 0,\n      isDaily: editableTask && editableTask.taskData.isDaily,\n      failedPomodoros: [],\n      ...taskData,\n    };\n\n    if (editableTask) {\n      onUpdateTask({ data: dataToSend, id: editableTask.id });\n    } else {\n      onSaveTask(dataToSend);\n    }\n  };\n\n  const deleteHandler = () => {\n    onDeleteTask(editableTask.id);\n  };\n  const buttons = formButtons(editableTask, [cancelHandler, saveHandler, deleteHandler]);\n  const modalContent = (\n    <>\n      <h3 className={classes.AddTaskTitle}>\n        {taskList.editableTask ? 'Edit Task' : 'Add Task'}\n      </h3>\n      {taskFormOpts.map((field) => (\n        <TaskFormField\n          key={field.labelName}\n          {...field}\n        />\n      ))}\n      <div className={classes.ButtonsWrapper}>\n        {buttons.map((item) => (\n          <button\n            key={item.id}\n            className={item.classes}\n            onClick={item.handler}\n          />\n        ))}\n      </div>\n    </>\n  );\n\n  return (\n    <form className={classes.Form}>\n      {taskList.loading\n        ? <Spinner />\n        : modalContent}\n    </form>\n  );\n};\n\nconst mapStateToProps = ({ taskList }) => ({\n  taskList,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onCloseTaskListModal: () => dispatch(action.closeTaskListModal()),\n  onSaveTask: (data) => dispatch(action.saveTask(data)),\n  onUpdateTask: (taskObj) => dispatch(action.updateTask(taskObj)),\n  onDeleteTask: (id) => dispatch(action.deleteTask(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import uuid from 'uuid/v1';\nimport classes from '../components/TaskForm/Form.module.scss';\n\nexport default (isEdit, handlers) => {\n  const [cancelHandler, saveHandler, deleteHandler] = handlers;\n  const formButtons = [\n    {\n      id: uuid(),\n      classes: `${classes.Button} icon-close`,\n      handler: cancelHandler,\n    },\n    {\n      id: uuid(),\n      classes: `${classes.Button} icon-check`,\n      handler: saveHandler,\n    },\n  ];\n\n  if (isEdit) {\n    formButtons.unshift(\n      {\n        id: uuid(),\n        classes: `${classes.Button} ${classes.DeleteButton} icon-trash`,\n        handler: deleteHandler,\n      },\n    );\n  }\n\n  return formButtons;\n};\n","import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PlusBtn from '../../components/AddTask/PlusBtn';\nimport PageHeading from '../../components/PageHeading/PageHeading';\nimport TaskListMessages from '../../components/TaskListMessages/TaskListMessages';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Tasks from '../../components/Tasks/Tasks';\nimport Modal from '../../components/UI/Modal/Modal';\nimport DeleteConfirmation from '../../components/DeleteConfirmation/DeleteConfirmation';\nimport TaskForm from '../../components/TaskForm/Form';\nimport classes from './TaskList.module.scss';\nimport * as action from '../../store/actions/index';\n\nconst TaskList = ({\n  history,\n  taskList,\n  onInitTaskList,\n  onSkipGreeting,\n  onOpenTaskListModal,\n}) => {\n  useEffect(() => {\n    onInitTaskList();\n  }, [onInitTaskList]);\n  const redirectToSettings = () => {\n    onSkipGreeting();\n    history.push('/settings');\n  };\n  let content = <Spinner />;\n\n  if (taskList.tasks.globalList) {\n    content = <Tasks />;\n  }\n  if (taskList.isFirstTask || taskList.isFirstVisit) {\n    content = (\n      <TaskListMessages\n        skip={onSkipGreeting}\n        redirect={redirectToSettings}\n        str={taskList.isFirstVisit ? 'firstVisit' : 'firstTask'}\n        isFirstVisit={taskList.isFirstVisit}\n      />\n    );\n  }\n  return (\n    <div className={classes.TaskList}>\n      <div className={classes.AddTaskWrapper}>\n        <PageHeading title=\"Daily Task List\" />\n        <PlusBtn showModal={onOpenTaskListModal} />\n      </div>\n      {content}\n      {taskList.isModalOpen\n        && (\n          <Modal>\n            {taskList.isDeleteConfirmationShown\n              ? <DeleteConfirmation\n                elements={taskList.shouldBeDeleteItems}\n                loading={taskList.loading}\n              />\n              : <TaskForm />}\n          </Modal>\n        )}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ taskList }) => ({\n  taskList,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onInitTaskList: () => dispatch(action.initTaskList()),\n  onSkipGreeting: () => dispatch(action.skipGreeting()),\n  onOpenTaskListModal: () => dispatch(action.openTaskListModal()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TaskList));\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport classes from './Tabs.module.scss';\n\nexport default withRouter(({ elements, match }) => (\n  <ul className={classes.Tabs}>\n    {elements.map((elem) => {\n      const splitedPath = `${match.path}/${elem}`;\n      return (\n        <li className={classes.TabsItem} key={elem}>\n          <NavLink\n            activeClassName={classes.Active}\n            className={classes.TabsLink}\n            to={splitedPath}\n          >\n            {elem}\n          </NavLink>\n        </li>\n      );\n    })}\n  </ul>\n));\n","import React from 'react';\nimport classes from './SubTitle.module.scss';\n\nexport default ({ subTitle }) => (\n  <h3 className={classes.SubTitle}>{subTitle}</h3>\n);\n","import React from 'react';\nimport classes from './SettingsControl.module.scss';\n\nexport default ({\n  title,\n  name,\n  value,\n  range,\n  text,\n  onIncrement,\n  onDecrement,\n}) => {\n  const settingsWord = name !== 'iteration' ? ' minutes' : ' iterations';\n  const { min, max } = range;\n  const categoryName = [classes.Label];\n  switch (name) {\n    case ('iteration'):\n      categoryName.push(classes.Iteration);\n      break;\n    case ('shortBreak'):\n      categoryName.push(classes.ShortBreak);\n      break;\n    case ('longBreak'):\n      categoryName.push(classes.LongBreak);\n      break;\n    default:\n      categoryName.push(classes.Work);\n  }\n  return (\n    <div className={classes.SettingsControl}>\n      <label className={categoryName.join(' ')} htmlFor={name}>\n        {title}\n      </label>\n      <div className={classes.ControlsWrapper}>\n        <button\n          className=\"icon-minus\"\n          disabled={value === min}\n          onClick={(evt) => {\n            evt.preventDefault();\n            onDecrement(name);\n          }}\n        />\n        <input className={classes.Input} type=\"text\" value={value} readOnly name={name} />\n        <button\n          className=\"icon-add\"\n          disabled={value === max}\n          onClick={(evt) => {\n            evt.preventDefault();\n            onIncrement(name);\n          }}\n        />\n      </div>\n      <p className={classes.ControlDescription}>\n        {text}\n        <span>{settingsWord}</span>\n      </p>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport classes from './TimeLine.module.scss';\n\nexport default ({ segment, size }) => {\n  let currentClass = null;\n  switch (segment) {\n    case ('work'):\n      currentClass = classes.WorkIteration;\n      break;\n    case ('shortBreak'):\n      currentClass = classes.ShortBreak;\n      break;\n    default:\n      currentClass = classes.LongBreak;\n  }\n\n  return (\n    (\n      <div\n        className={currentClass}\n        style={{ width: `${size}%` }}\n      />\n    )\n  );\n};\n","import React from 'react';\n\nimport classes from './TimeLine.module.scss';\n\nexport default ({ text, leftShift, markOpts }) => {\n  const additionalClass = markOpts ? classes[markOpts] : classes.ShiftedMark;\n  const classNames = [classes.TimeLineMark, additionalClass];\n  return (\n    <p className={classNames.join(' ')} style={{ left: leftShift }}>\n      <span>{text}</span>\n    </p>\n  );\n};\n","export default (num) => {\n  const hours = Math.floor(num / 60);\n  const minutes = num % 60;\n  let time = `${hours}h ${minutes} m `;\n  if (hours === 0) {\n    time = `${minutes} m`;\n  }\n  if (minutes === 0) {\n    time = `${hours}h`;\n  }\n  return time;\n};\n","import React from 'react';\n\nimport uuid from 'uuid/v1';\nimport TimeLineSegment from './TimeLineSegment';\nimport TimeLineMark from './TimeLineMark';\nimport classes from './TimeLine.module.scss';\nimport convertNumToTIme from '../../helpers/convertNumToTime';\nimport getTimeLineData from '../../helpers/getTimeLineData';\n\nexport default ({ state }) => {\n  const [work, iteration, short, long] = state;\n  const { map, unit, timeIntervals, topMarks } = getTimeLineData(state);\n  const timeMarkHandler = (timeMark) => (\n    <TimeLineMark\n      key={uuid()}\n      leftShift={`${unit * timeMark.time}%`}\n      text={timeMark.text || convertNumToTIme(timeMark.time)}\n      markOpts={timeMark.opts}\n    />\n  );\n  const workProccess = [...Array(iteration.value)].map((_, index) => {\n    const returnedValue = [\n      <TimeLineSegment\n        key={uuid()}\n        segment=\"work\"\n        size={unit * work.value}\n      />,\n    ];\n    if (index !== iteration.value - 1) {\n      return [...returnedValue,\n        <TimeLineSegment\n          key={uuid()}\n          segment=\"shortBreak\"\n          size={unit * short.value}\n        />,\n      ];\n    }\n    return returnedValue;\n  });\n  const timeLineGraph = [workProccess,\n    <TimeLineSegment\n      key={uuid()}\n      segment=\"longBreak\"\n      size={unit * long.value}\n    />, workProccess];\n\n  const getMappedList = map(timeMarkHandler);\n  const topMarksContainer = getMappedList(topMarks);\n  const markLines = getMappedList(timeIntervals);\n\n  return (\n    <>\n      <h3 className={classes.Cycle}>Your cycle</h3>\n      <div className={classes.TimeLineWrapper}>\n        <div className={classes.TopMarksWrapper}>\n          {topMarksContainer}\n        </div>\n        <div className={classes.TimeLine}>\n          {timeLineGraph}\n        </div>\n        <div className={classes.BottomMarksWrapper}>\n          {markLines}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { curry } from 'ramda';\nimport convertNumToTIme from './convertNumToTime';\n\nexport default ([work, iteration, short, long]) => {\n  const map = curry((fn, arr) => arr.map(fn));\n  const workWithShortBreaks = work.value * iteration.value + (short.value * (iteration.value - 1));\n  const totalTime = (workWithShortBreaks * 2) + long.value;\n  const unit = 100 / totalTime;\n  const cycleTime = workWithShortBreaks + long.value;\n  let currentTime = 0;\n\n  const timeIntervals = [...Array(Math.floor(totalTime / 30))].map((_) => {\n    if ((currentTime + 30) < totalTime) {\n      currentTime += 30;\n    }\n    return { time: currentTime };\n  });\n  const topMarks = [\n    { text: convertNumToTIme(0), opts: 'Start' },\n    { text: `First cycle ${convertNumToTIme(cycleTime)}`, time: cycleTime },\n    { text: convertNumToTIme(totalTime), opts: 'End' },\n  ];\n  return {\n    map,\n    unit,\n    timeIntervals,\n    topMarks,\n  };\n};\n","export const SETTINGS = 'settings';\nexport const STATISTIC = 'statistic';\nexport const TASK_LIST = 'task-list';\nexport const POMODOROS = 'pomodoros';\nexport const TIMER = 'timer';\nexport const CATEGORIES = 'categories';\nexport const LOGIN = 'login';\nexport const RESOLVED_ROUTES = [\n  `/${SETTINGS}`,\n  `/${SETTINGS}/`,\n  `/${SETTINGS}/${POMODOROS}`,\n  `/${SETTINGS}/${CATEGORIES}`,\n];","import React, { useEffect } from 'react';\nimport uuid from 'uuid/v1';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport SettingsControl from './SettingsControl/SettingsControl';\nimport TimeLine from '../TimeLine/TimeLine';\nimport Button from '../UI/Button/Button';\nimport classes from './SettingsControls.module.scss';\nimport * as actions from '../../store/actions';\nimport Spinner from '../UI/Spinner/Spinner';\nimport { TASK_LIST } from '../../constants/Routes';\n\nconst SettingsControls = ({\n  settings,\n  loading,\n  history,\n  onInitSettings,\n  onSaveSettings,\n  onResetSettings,\n  onIncrement,\n  onDecrement,\n}) => {\n  useEffect(() => {\n    onInitSettings();\n    return () => onResetSettings();\n  }, [onInitSettings, onResetSettings]);\n  const redirectToTasks = () => history.push(`/${TASK_LIST}`);\n  const saveSettingsHandler = () => onSaveSettings(settings);\n  return (\n    !loading\n      ? (\n        <div>\n          <form className={classes.SettingsControlForm} action=\"/\">\n            {settings.map((control) => (\n              <SettingsControl\n                key={uuid()}\n                title={control.title}\n                name={control.name}\n                range={{ min: control.min, max: control.max }}\n                value={control.value}\n                text={control.text}\n                onIncrement={onIncrement}\n                onDecrement={onDecrement}\n              />\n            ))}\n          </form>\n          {settings.length > 0 ? <TimeLine state={settings} /> : null}\n          <div className={classes.ButtonWrapper}>\n            <Button clickHandler={redirectToTasks} color=\"Blue\">Go to Tasks</Button>\n            <Button clickHandler={saveSettingsHandler} color=\"Green\">Save</Button>\n          </div>\n        </div>\n      )\n      : <Spinner />\n  );\n};\n\nconst mapStateToProps = ({ settings }) => ({\n  settings: settings.settingsArr,\n  loading: settings.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onInitSettings: () => dispatch(actions.initSettings()),\n  onSaveSettings: (settings) => dispatch(actions.updateSettings(settings)),\n  onResetSettings: () => dispatch(actions.resetSettings()),\n  onIncrement: (name) => dispatch(actions.incrementSettings(name)),\n  onDecrement: (name) => dispatch(actions.decrementSettings(name)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)((withRouter(SettingsControls)));\n","import React from 'react';\n\nimport SubTitle from '../SubTItle/SubTitle';\nimport SettingsControls from '../SettingsControls/SettingsControls';\n\nexport default () => (\n  <>\n    <SubTitle subTitle=\"Pomodoros settings\" />\n    <SettingsControls />\n  </>\n);\n","import React from 'react';\n\nimport classes from './CategoriesList.module.scss';\n\nexport default ({ children }) => (\n  <li className={[classes.ListItem, classes[children]].join(' ')}>\n    <span>{children}</span>\n  </li>\n);\n","import React from 'react';\n\nimport CategoryItem from './CategoryItem';\nimport classes from './CategoriesList.module.scss';\n\nconst categories = [\n  'Work',\n  'Education',\n  'Hobby',\n  'Sport',\n  'Other',\n];\n\nexport default () => {\n  const categoryList = categories.map((category) => (\n    <CategoryItem key={category}>\n      {category}\n    </CategoryItem>\n  ));\n\n  return (\n    <ul className={classes.List}>\n      {categoryList}\n    </ul>\n  );\n};\n","import React from 'react';\n\nimport { withRouter } from 'react-router-dom';\nimport SubTitle from '../SubTItle/SubTitle';\nimport CategoriesList from './CategoryList/CategoriesList';\nimport Button from '../UI/Button/Button';\nimport classes from './CategoryList/CategoriesList.module.scss';\nimport { TASK_LIST } from '../../constants/Routes';\n\nexport default withRouter(({ history }) => {\n  const redirectToTasks = () => {\n    history.push(`/${TASK_LIST}`);\n  };\n  return (\n    <>\n      <SubTitle subTitle=\"Categories list overview\" />\n      <CategoriesList />\n      <div className={classes.ButtonWrapper}>\n        <Button\n          color=\"Blue\"\n          clickHandler={redirectToTasks}\n        >\n          Go to Tasks\n        </Button>\n      </div>\n    </>\n  );\n});\n","import React from 'react';\n\nimport {\n  Route,\n  Switch,\n  withRouter,\n  Redirect,\n} from 'react-router-dom';\nimport PomodorosSettings from '../components/SettingsPomodoros/SettingsPomodoros';\nimport CategoryList from '../components/SettingsCategories/Categories';\nimport { POMODOROS, CATEGORIES } from '../constants/Routes';\n\nexport default withRouter(({ match }) => (\n  <Switch>\n    <Route path={`${match.path}/${POMODOROS}`} exact component={PomodorosSettings} />\n    <Route path={`${match.path}/${CATEGORIES}`} exact component={CategoryList} />\n    <Redirect from={`${match.path}`} exact to={`${match.path}/${POMODOROS}`} component={PomodorosSettings} />\n  </Switch>\n));\n","class Auth {\n  constructor() {\n    this.authentificated = true;\n  }\n\n  login() {\n    this.authentificated = true;\n  }\n\n  logout() {\n    this.authentificated = false;\n  }\n\n  isAuthenticated() {\n    return this.authentificated;\n  }\n}\n\nexport default new Auth();\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport auth from '../../auth';\n\nexport default (props) => {\n  const isAuth = !auth.isAuthenticated()\n    ? (\n      <Link to=\"/login\" style={{ color: 'white' }}>\n        Login\n      </Link>\n    )\n    : null;\n  return (\n    <div>\n      <h1>Not Found</h1>\n      {isAuth}\n    </div>\n  )\n};\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { RESOLVED_ROUTES } from '../../constants/Routes';\nimport NotFound from '../../containers/NotFound/NotFound';\n\nexport default withRouter(({ location, children }) => {\n  const isResolved = RESOLVED_ROUTES.find((item) => item === location.pathname);\n  let Component = children;\n  if (!isResolved) {\n    Component = <NotFound />;\n  }\n  return Component;\n});\n","import React from 'react';\n\nimport PageHeading from '../../components/PageHeading/PageHeading';\nimport Tabs from '../../components/Tabs/Tabs';\nimport SettingsRouter from '../../router/SettingsRouter';\nimport {\n  POMODOROS,\n  CATEGORIES,\n} from '../../constants/Routes';\nimport classes from './Settings.module.scss';\nimport ResolveRoute from '../../hoc/ResolveRoutes/ResolveRoute';\n\nexport default () => (\n  <ResolveRoute>\n    <PageHeading title=\"Settings\" />\n    <div className={classes.Wrapper}>\n      <Tabs elements={[POMODOROS, CATEGORIES]} />\n      <SettingsRouter />\n    </div>\n  </ResolveRoute>\n);\n","import React from 'react';\n\nexport default (props) => (\n  <div>\n    Statistic\n  </div>\n);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport auth from '../auth';\n\nexport default ({ component: Component, ...rest }) => (\n  <Route {...rest}\n    render={(props) => (auth.authentificated\n      ? <Component {...props} />\n      : <Redirect to=\"/\" />)}\n  />\n);\n","import React from 'react';\nimport auth from '../../auth';\n\nexport default (props) => (\n  <div>\n    <h1>Login Page</h1>\n    <button onClick={() => {\n      auth.login();\n      props.history.push('/task-list');\n    }}\n    >\n      Login\n    </button>\n  </div>\n);\n","import React, {lazy, Suspense} from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport TaskList from '../containers/TaskList/TaskList';\nimport Settings from '../containers/Settings/Settings';\nimport Statistic from '../containers/Statistic/Statistic';\nimport ProtectedRoute from './ProtectedRoute';\nimport Login from '../containers/Login/Login';\nimport NotFound from '../containers/NotFound/NotFound';\nimport {\n  TASK_LIST,\n  SETTINGS,\n  STATISTIC,\n  TIMER,\n  LOGIN,\n} from '../constants/Routes';\nimport Spinner from '../components/UI/Spinner/Spinner';\n\nconst Timer = lazy(() => import('../containers/Timer/Timer'));\n\nexport default () => (\n  <Switch>\n    <ProtectedRoute path={`/${TASK_LIST}`} component={TaskList} />\n    <ProtectedRoute path={`/${SETTINGS}`} component={Settings} />\n    <ProtectedRoute path={`/${STATISTIC}`} component={Statistic} />\n    <Route path={`/${TIMER}/:id`} render={() => (\n      <Suspense fallback={Spinner()}>\n        <Timer />\n      </Suspense>\n    )} />\n    <Route path={`/${LOGIN}`} component={Login} />\n    <Route path=\"*\" component={NotFound} />\n  </Switch>\n);\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport Logo from '../../assets/images/Logo.svg';\nimport classes from './Logo.module.scss';\n\nexport default ({ shown }) => shown && (\n  <Link\n    className={classes.Logo}\n    to=\"/task-list\"\n  >\n    <img\n      src={Logo}\n      alt=\"Logo\"\n      data-test=\"Logo\"\n    />\n  </Link>\n);\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as action from '../../../../store/actions';\nimport classes from './NavigationItem.module.scss';\nimport { SETTINGS, POMODOROS, TASK_LIST } from '../../../../constants/Routes';\n\nexport default withRouter(({ title, location }) => {\n  const isDeleteMode = useSelector((state) => state.taskList.isDeleteMode);\n  const activeClass = isDeleteMode ? '' : classes.Active;\n  const locationPath = location.pathname.split('/');\n  const hasSubRoute = locationPath.length > 2;\n  let offDeleteMode = null;\n  let path = title === SETTINGS ? `${title}/${POMODOROS}` : title;\n  if (title === SETTINGS && hasSubRoute) {\n    path = `${title}/${locationPath[locationPath.length - 1]}`;\n  }\n  if (title === TASK_LIST) {\n    const dispatch = useDispatch();\n    offDeleteMode = () => dispatch(action.disableDeleteMode());\n  }\n\n  return (\n    <li className={classes.NavigationItem}>\n      <NavLink\n        to={`/${path}`}\n        onClick={offDeleteMode}\n        className={`${classes.NavigationLink}`}\n        activeClassName={activeClass}\n      >\n        <span className={`icon-${title}`} />\n      </NavLink>\n    </li>\n  );\n});\n","import React from 'react';\n\nimport NavigationItem from './NavigationItem/NavigationItem';\nimport classes from './NavigationItems.module.scss';\nimport {\n  TASK_LIST,\n  SETTINGS,\n  STATISTIC,\n} from '../../../constants/Routes';\n\nexport default () => (\n  <ul className={classes.Menu}>\n    {[TASK_LIST, STATISTIC, SETTINGS].map((item) => <NavigationItem title={item} key={item} />)}\n  </ul>\n);\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PlusBtn from '../../AddTask/PlusBtn';\nimport * as action from '../../../store/actions';\nimport classes from './Button.module.scss';\n\nexport default (props) => {\n  const dispatch = useDispatch();\n  const { isDeleteMode, shouldBeDeleteItems } = useSelector(state => state.taskList);\n  const trashBtnClasses = isDeleteMode ? `${classes.TaskListButton} ${classes.Active}` : classes.TaskListButton;\n  const deleteTaskHandler = (counter, isDeleteMode) => {\n    const actionToExecute = counter && isDeleteMode\n      ? action.showDeleteConfirmation()\n      : action.enableDeleteMode();\n    dispatch(actionToExecute);\n  };\n\n  return (\n    <ul className={classes.TaskListButtons}>\n      {\n        props.fixed\n        && (\n          <li className={classes.TaskListItem}>\n            <PlusBtn showModal={() => dispatch(action.openTaskListModal())} />\n          </li>\n        )\n      }\n      <li className={`${classes.TaskListItem} ${classes.TrashItem}`}>\n        <button\n          className={trashBtnClasses}\n          onClick={() => deleteTaskHandler(shouldBeDeleteItems.length, isDeleteMode)}\n        >\n          {\n            shouldBeDeleteItems.length\n              ? <span className={classes.TrashCounter}>{shouldBeDeleteItems.length}</span>\n              : null\n          }\n          <span className=\"icon-trash\" />\n        </button>\n      </li>\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Logo from '../../components/Logo/Logo';\nimport NavigationItems from '../../components/Navigation/NavigationItems/NavigationItems';\nimport HeaderButtons from '../../components/UI/Button/HeaderButtons';\nimport { TASK_LIST } from '../../constants/Routes';\nimport classes from './Header.module.scss';\n\nexport default withRouter(({ location }) => {\n  const { pathname } = location;\n  const isTaskList = pathname === `/${TASK_LIST}`;\n  const [isFixedHeader, fixedHeaderHandler] = useState(false);\n  const headerClasses = isFixedHeader ? [classes.Header, classes.Sticky] : [classes.Header];\n  const getScroll = () => {\n    const isScroll = window.pageYOffset > 50;\n    fixedHeaderHandler(isScroll);\n  };\n\n  useEffect(() => window.addEventListener('scroll', getScroll), []);\n\n  return (\n    <header className={headerClasses.join(' ')}>\n      <div className={classes.HeaderWrapper}>\n        <Logo shown={isFixedHeader} />\n        <div className={classes.Actions}>\n          {isTaskList && <HeaderButtons fixed={isFixedHeader} />}\n          <nav>\n            <NavigationItems />\n          </nav>\n        </div>\n      </div>\n    </header>\n  );\n});\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Router from '../../router/Router';\nimport Header from '../../containers/Header/Header';\nimport classes from './Layout.module.scss';\n\nexport default withRouter(() => (\n  <>\n    <Header />\n    <main className={classes.Layout}>\n      <Router />\n    </main>\n  </>\n));\n","import React from 'react';\nimport Layout from './hoc/Layout/Layout';\n\nexport default () => (\n  <div className=\"App\">\n    <Layout />\n  </div>\n);\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  settingsArr: [],\n  loading: true,\n};\n\nconst settingControlsHandler = (state, action, dir) => {\n  const settingsItem = state.settingsArr.find((setting) => setting.name === action.name);\n  const {\n    value, min, max, step,\n  } = settingsItem;\n  if (dir === 'decr' && value > min) {\n    settingsItem.value -= step;\n  }\n  if (dir === 'incr' && value < max) {\n    settingsItem.value += step;\n  }\n  const newArr = [...state.settingsArr];\n  newArr[settingsItem] = settingsItem;\n  return { ...state, settingsArr: newArr };\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.RESET_SETTINGS.HAS_FETCHED:\n      return { ...state, settingsArr: [], loading: true };\n\n    case actionTypes.SET_SETTINGS.HAS_FETCHED:\n      return { ...state, settingsArr: action.settings, loading: false };\n\n    case actionTypes.INCREMENT_SETTINGS.HAS_FETCHED:\n      return settingControlsHandler(state, action, 'incr');\n\n    case actionTypes.DECREMENT_SETTINGS.HAS_FETCHED:\n      return settingControlsHandler(state, action, 'decr');\n\n    case actionTypes.SAVE_SETTINGS.IS_FETCHING:\n      return { ...state, loading: true };\n\n    case actionTypes.SAVE_SETTINGS.HAS_FETCHED:\n      return { ...state, loading: false };\n\n    default:\n      return state;\n  }\n};\n","const getFormattedDate = (date) => {\n  const year = date.getFullYear();\n  const month = (1 + date.getMonth()).toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\nexport default (\n  title = '',\n  desc = '',\n  category = 'Work',\n  date = getFormattedDate(new Date()),\n  estimation = '1',\n  priority = 'Urgent',\n) => [\n  {\n    labelName: 'title',\n    placeholder: 'Add title here',\n    type: 'text',\n    value: title,\n  },\n  {\n    labelName: 'description',\n    placeholder: 'Add description here',\n    type: 'text',\n    value: desc,\n  },\n  {\n    labelName: 'category',\n    placeholder: null,\n    type: 'radio',\n    value: category,\n    checked: category,\n    controlsList: [\n      'Work',\n      'Education',\n      'Hobby',\n      'Sport',\n      'Other',\n    ],\n  },\n  {\n    labelName: 'deadline',\n    type: 'date',\n    value: date,\n  },\n  {\n    labelName: 'estimation',\n    type: 'radio',\n    value: estimation,\n    checked: estimation,\n    controlsList: ['1', '2', '3', '4', '5'],\n  },\n  {\n    labelName: 'priority',\n    type: 'radio',\n    value: priority,\n    checked: priority,\n    controlsList: ['Urgent', 'High', 'Middle', 'Low'],\n  },\n];\n","import { curry } from 'ramda';\n\nconst checkIsPropTruthy = curry((prop, item) => item[1][prop]);\nconst filter = curry((arr, fn) => arr.filter(fn));\nconst checkIsTaskDaily = (item) => !item[1].done && !item[1].isDaily;\n\nconst filterByLists = (list) => {\n  const filterBy = filter(list);\n  const daily = filterBy(checkIsPropTruthy('isDaily'));\n  const done = filterBy(checkIsPropTruthy('done'));\n  const global = filterBy(checkIsTaskDaily);\n\n  return { global, done, daily };\n};\n\n\nexport default (state, action) => {\n  const { tasks, isFirstTask } = action.payload;\n  const allTasks = Object.entries(tasks);\n  const { global, done, daily } = filterByLists(allTasks);\n\n  const taskListCopy = {\n    ...state.tasks,\n    allTasks,\n    globalList: global,\n    dailyList: daily,\n    done,\n  };\n\n  return { ...state, tasks: taskListCopy, isFirstTask, loading: false };\n};\n","import taskForm from '../../constants/TaskFormOpts';\n\nexport default (state, data) => {\n  const {\n    title,\n    description,\n    category,\n    deadline,\n    priority,\n    estimation,\n    fireBaseId,\n  } = data;\n\n  const formData = taskForm(title, description, category, deadline, estimation, priority);\n\n  return {\n    ...state,\n    taskFormOpts: formData,\n    isModalOpen: true,\n    editableTask: fireBaseId,\n  };\n};\n","export default (state, action) => {\n  const { evt, id, prop } = action;\n  const { value } = evt.target;\n  const index = state.taskFormOpts.findIndex((item) => item.labelName === id);\n  const newState = [...state.taskFormOpts];\n\n  newState[index].value = value;\n\n  if (prop === 'checked') {\n    newState[index][prop] = value;\n  }\n\n  return { ...state, taskFormOpts: newState };\n};\n","import { uniq } from 'ramda';\n\nexport default (state, payload) => {\n  const { ids, isSelected } = payload;\n  const shouldBeDeleteItemsCopy = [...state.shouldBeDeleteItems];\n  let updatedArray = uniq([...shouldBeDeleteItemsCopy, ...ids]);\n\n  if (isSelected) {\n    updatedArray = shouldBeDeleteItemsCopy.filter((item) => !ids.find((id) => item === id));\n  }\n\n  return { ...state, shouldBeDeleteItems: updatedArray };\n};\n","import {\n  CLOSE_TASK_LIST_MODAL,\n  GET_TASKS,\n  CHANGE_TASK_LIST_MODAL,\n  OPEN_TASK_LIST_MODAL,\n  SKIP_GREETING,\n  SAVE_TASK,\n  EDIT_TASK,\n  UPDATE_TASK,\n  DELETE_TASK,\n  MOVE_TO_DAILY,\n  ENABLE_DELETE_MODE,\n  DISABLE_DELETE_MODE,\n  UPDATE_TRASH,\n  SHOW_DELETE_CONFIRMATION,\n  UPDATE_TRASH_ITEM,\n  DECLINE_DELETING,\n} from '../actions/actionTypes';\nimport checkFirstVisit from '../../helpers/checkFirstVisit';\nimport taskForm from '../../constants/TaskFormOpts';\nimport getTasks from '../utils/getTasks';\nimport setFields from '../utils/setFields';\nimport updateField from '../utils/updateField';\nimport handleTrashItems from '../../helpers/handleTrashItems';\n\nexport const initialState = {\n  tasks: {\n    globalList: null,\n    dailyList: null,\n    done: null,\n  },\n  isFirstVisit: checkFirstVisit(sessionStorage.getItem('firstVisit')),\n  isFirstTask: null,\n  isModalOpen: false,\n  editableTask: null,\n  loading: false,\n  isDeleteMode: false,\n  shouldBeDeleteItems: [],\n  isDeleteConfirmationShown: false,\n  taskFormOpts: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TASKS.HAS_FETCHED:\n      return getTasks(state, action);\n\n    case SKIP_GREETING.HAS_FETCHED:\n      return { ...state, isFirstVisit: false };\n\n    case OPEN_TASK_LIST_MODAL.HAS_FETCHED:\n      return { ...state, taskFormOpts: taskForm(), isModalOpen: true };\n\n    case CLOSE_TASK_LIST_MODAL.HAS_FETCHED:\n      return { ...state, isModalOpen: false, editableTask: false };\n\n    case CHANGE_TASK_LIST_MODAL.HAS_FETCHED:\n      return updateField(state, action.payload);\n\n    case SAVE_TASK.IS_FETCHING:\n      return { ...state, loading: true };\n\n    case SAVE_TASK.HAS_FETCHED:\n      return { ...state, loading: false, isModalOpen: false };\n\n    case UPDATE_TASK.HAS_FETCHED:\n      return {\n        ...state, loading: false, isModalOpen: false, editableTask: false,\n      };\n\n    case UPDATE_TASK.IS_FETCHING:\n      return { ...state, loading: true };\n\n    case GET_TASKS.IS_FETCHING:\n      return { ...state, loading: true };\n\n    case EDIT_TASK.HAS_FETCHED:\n      return setFields(state, action.payload);\n\n    case DELETE_TASK.IS_FETCHING:\n      return { ...state, loading: true };\n\n    case DELETE_TASK.HAS_FETCHED:\n      return {\n        ...state,\n        loading: false,\n        isModalOpen: false,\n        shouldBeDeleteItems: [],\n        isDeleteConfirmationShown: false,\n        editableTask: null,\n      };\n\n    case MOVE_TO_DAILY.IS_FETCHING:\n      return { ...state, loading: true };\n\n    case MOVE_TO_DAILY.HAS_FETCHED:\n      return { ...state, loading: false };\n\n    case ENABLE_DELETE_MODE.HAS_FETCHED:\n      return { ...state, isDeleteMode: true };\n\n    case DISABLE_DELETE_MODE.HAS_FETCHED:\n      return { ...state, isDeleteMode: false };\n\n    case UPDATE_TRASH.HAS_FETCHED:\n      return { ...state, shouldBeDeleteItems: action.payload };\n\n    case SHOW_DELETE_CONFIRMATION.HAS_FETCHED:\n      return { ...state, isDeleteConfirmationShown: true, isModalOpen: true };\n\n    case DECLINE_DELETING.HAS_FETCHED:\n      return { ...state, isModalOpen: false, isDeleteConfirmationShown: false };\n\n    case UPDATE_TRASH_ITEM.HAS_FETCHED:\n      return handleTrashItems(state, action.payload);\n\n    default:\n      return state;\n  }\n};\n","import convertSettings from './convertSettings';\n\nexport default (state) => {\n  const { settings, turn, task } = state;\n  const {\n    work,\n    shortBreak,\n    longBreak,\n  } = convertSettings(settings);\n  const nextTurn = turn + 1;\n  let time = work.value;\n  let mode = 'work';\n\n  if (nextTurn % 2 === 0) {\n    time = shortBreak.value;\n    mode = 'break';\n  }\n\n  if (task.estimation % turn === 0) {\n    time = longBreak.value;\n  }\n  return {\n    ...state,\n    time,\n    mode,\n    turn: nextTurn,\n    isCleaned: false,\n  };\n};\n","export default (settings) => settings.reduce((acc, el) => ({ ...acc, [el.name]: el }), {});\n","import {\n  FINISH_ITERATION,\n  INIT_TIMER,\n  START_ITERATION,\n} from '../actions/actionTypes';\nimport switchTurn from '../utils/switchTurn';\n\nexport const initialState = {\n  settings: null,\n  task: null,\n  turn: 0,\n  mode: '',\n  time: 0,\n  loading: true,\n  isCleaned: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case INIT_TIMER.IS_FETCHING:\n      return {\n        ...state,\n        loading: false,\n      };\n\n    case INIT_TIMER.HAS_FETCHED:\n      return {\n        ...state,\n        settings: action.payload.settings,\n        task: action.payload.task,\n      };\n\n    case START_ITERATION.HAS_FETCHED:\n      return switchTurn(state, action.payload);\n\n    case FINISH_ITERATION.HAS_FETCHED:\n      return {\n        ...state,\n        mode: '',\n        time: 0,\n        isCleaned: true,\n      };\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport {\n  createStore,\n  combineReducers,\n  compose,\n  applyMiddleware,\n} from 'redux';\nimport './index.scss';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport settingsReducer from './store/reducers/settings';\nimport taskListReducer from './store/reducers/taskList';\nimport timerReducer from './store/reducers/timer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  settings: settingsReducer,\n  taskList: taskListReducer,\n  timer: timerReducer,\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk),\n));\n\nReactDOM.render(\n <Provider store={store}>\n   <BrowserRouter>\n     <App />\n   </BrowserRouter>\n </Provider>,\n document.getElementById('root'),\n);\n"],"sourceRoot":""}